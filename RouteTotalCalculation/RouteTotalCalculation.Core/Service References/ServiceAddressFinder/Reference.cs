//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RouteTotalCalculation.Core.ServiceAddressFinder {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="City", Namespace="http://webservices.maplink2.com.br")]
    [System.SerializableAttribute()]
    public partial class City : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string stateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string state {
            get {
                return this.stateField;
            }
            set {
                if ((object.ReferenceEquals(this.stateField, value) != true)) {
                    this.stateField = value;
                    this.RaisePropertyChanged("state");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultRange", Namespace="http://webservices.maplink2.com.br")]
    [System.SerializableAttribute()]
    public partial class ResultRange : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int pageIndexField;
        
        private int recordsPerPageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int pageIndex {
            get {
                return this.pageIndexField;
            }
            set {
                if ((this.pageIndexField.Equals(value) != true)) {
                    this.pageIndexField = value;
                    this.RaisePropertyChanged("pageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int recordsPerPage {
            get {
                return this.recordsPerPageField;
            }
            set {
                if ((this.recordsPerPageField.Equals(value) != true)) {
                    this.recordsPerPageField = value;
                    this.RaisePropertyChanged("recordsPerPage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="POIInfo", Namespace="http://webservices.maplink2.com.br")]
    [System.SerializableAttribute()]
    public partial class POIInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int recordCountField;
        
        private int pageCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceAddressFinder.POILocation> poiLocationsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int recordCount {
            get {
                return this.recordCountField;
            }
            set {
                if ((this.recordCountField.Equals(value) != true)) {
                    this.recordCountField = value;
                    this.RaisePropertyChanged("recordCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public int pageCount {
            get {
                return this.pageCountField;
            }
            set {
                if ((this.pageCountField.Equals(value) != true)) {
                    this.pageCountField = value;
                    this.RaisePropertyChanged("pageCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceAddressFinder.POILocation> poiLocations {
            get {
                return this.poiLocationsField;
            }
            set {
                if ((object.ReferenceEquals(this.poiLocationsField, value) != true)) {
                    this.poiLocationsField = value;
                    this.RaisePropertyChanged("poiLocations");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="POILocation", Namespace="http://webservices.maplink2.com.br")]
    [System.SerializableAttribute()]
    public partial class POILocation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string districtField;
        
        private bool carAccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string dataSourceField;
        
        private RouteTotalCalculation.Core.ServiceAddressFinder.City cityField;
        
        private RouteTotalCalculation.Core.ServiceAddressFinder.Point pointField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string district {
            get {
                return this.districtField;
            }
            set {
                if ((object.ReferenceEquals(this.districtField, value) != true)) {
                    this.districtField = value;
                    this.RaisePropertyChanged("district");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public bool carAccess {
            get {
                return this.carAccessField;
            }
            set {
                if ((this.carAccessField.Equals(value) != true)) {
                    this.carAccessField = value;
                    this.RaisePropertyChanged("carAccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string dataSource {
            get {
                return this.dataSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.dataSourceField, value) != true)) {
                    this.dataSourceField = value;
                    this.RaisePropertyChanged("dataSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false, Order=4)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.City city {
            get {
                return this.cityField;
            }
            set {
                if ((object.ReferenceEquals(this.cityField, value) != true)) {
                    this.cityField = value;
                    this.RaisePropertyChanged("city");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false, Order=5)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.Point point {
            get {
                return this.pointField;
            }
            set {
                if ((object.ReferenceEquals(this.pointField, value) != true)) {
                    this.pointField = value;
                    this.RaisePropertyChanged("point");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Point", Namespace="http://webservices.maplink2.com.br")]
    [System.SerializableAttribute()]
    public partial class Point : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private double xField;
        
        private double yField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double x {
            get {
                return this.xField;
            }
            set {
                if ((this.xField.Equals(value) != true)) {
                    this.xField = value;
                    this.RaisePropertyChanged("x");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double y {
            get {
                return this.yField;
            }
            set {
                if ((this.yField.Equals(value) != true)) {
                    this.yField = value;
                    this.RaisePropertyChanged("y");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Address", Namespace="http://webservices.maplink2.com.br")]
    [System.SerializableAttribute()]
    public partial class Address : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string streetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string houseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string zipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string districtField;
        
        private RouteTotalCalculation.Core.ServiceAddressFinder.City cityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string street {
            get {
                return this.streetField;
            }
            set {
                if ((object.ReferenceEquals(this.streetField, value) != true)) {
                    this.streetField = value;
                    this.RaisePropertyChanged("street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string houseNumber {
            get {
                return this.houseNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.houseNumberField, value) != true)) {
                    this.houseNumberField = value;
                    this.RaisePropertyChanged("houseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string zip {
            get {
                return this.zipField;
            }
            set {
                if ((object.ReferenceEquals(this.zipField, value) != true)) {
                    this.zipField = value;
                    this.RaisePropertyChanged("zip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string district {
            get {
                return this.districtField;
            }
            set {
                if ((object.ReferenceEquals(this.districtField, value) != true)) {
                    this.districtField = value;
                    this.RaisePropertyChanged("district");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false, Order=4)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.City city {
            get {
                return this.cityField;
            }
            set {
                if ((object.ReferenceEquals(this.cityField, value) != true)) {
                    this.cityField = value;
                    this.RaisePropertyChanged("city");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddressOptions", Namespace="http://webservices.maplink2.com.br")]
    [System.SerializableAttribute()]
    public partial class AddressOptions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int matchTypeField;
        
        private bool usePhoneticField;
        
        private int searchTypeField;
        
        private RouteTotalCalculation.Core.ServiceAddressFinder.ResultRange resultRangeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int matchType {
            get {
                return this.matchTypeField;
            }
            set {
                if ((this.matchTypeField.Equals(value) != true)) {
                    this.matchTypeField = value;
                    this.RaisePropertyChanged("matchType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool usePhonetic {
            get {
                return this.usePhoneticField;
            }
            set {
                if ((this.usePhoneticField.Equals(value) != true)) {
                    this.usePhoneticField = value;
                    this.RaisePropertyChanged("usePhonetic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public int searchType {
            get {
                return this.searchTypeField;
            }
            set {
                if ((this.searchTypeField.Equals(value) != true)) {
                    this.searchTypeField = value;
                    this.RaisePropertyChanged("searchType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false, Order=3)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.ResultRange resultRange {
            get {
                return this.resultRangeField;
            }
            set {
                if ((object.ReferenceEquals(this.resultRangeField, value) != true)) {
                    this.resultRangeField = value;
                    this.RaisePropertyChanged("resultRange");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddressInfo", Namespace="http://webservices.maplink2.com.br")]
    [System.SerializableAttribute()]
    public partial class AddressInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int recordCountField;
        
        private int pageCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceAddressFinder.AddressLocation> addressLocationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int recordCount {
            get {
                return this.recordCountField;
            }
            set {
                if ((this.recordCountField.Equals(value) != true)) {
                    this.recordCountField = value;
                    this.RaisePropertyChanged("recordCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public int pageCount {
            get {
                return this.pageCountField;
            }
            set {
                if ((this.pageCountField.Equals(value) != true)) {
                    this.pageCountField = value;
                    this.RaisePropertyChanged("pageCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceAddressFinder.AddressLocation> addressLocation {
            get {
                return this.addressLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.addressLocationField, value) != true)) {
                    this.addressLocationField = value;
                    this.RaisePropertyChanged("addressLocation");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddressLocation", Namespace="http://webservices.maplink2.com.br")]
    [System.SerializableAttribute()]
    public partial class AddressLocation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string keyField;
        
        private RouteTotalCalculation.Core.ServiceAddressFinder.Address addressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string zipLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string zipRField;
        
        private bool carAccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string dataSourceField;
        
        private RouteTotalCalculation.Core.ServiceAddressFinder.Point pointField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string key {
            get {
                return this.keyField;
            }
            set {
                if ((object.ReferenceEquals(this.keyField, value) != true)) {
                    this.keyField = value;
                    this.RaisePropertyChanged("key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false, Order=1)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.Address address {
            get {
                return this.addressField;
            }
            set {
                if ((object.ReferenceEquals(this.addressField, value) != true)) {
                    this.addressField = value;
                    this.RaisePropertyChanged("address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string zipL {
            get {
                return this.zipLField;
            }
            set {
                if ((object.ReferenceEquals(this.zipLField, value) != true)) {
                    this.zipLField = value;
                    this.RaisePropertyChanged("zipL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string zipR {
            get {
                return this.zipRField;
            }
            set {
                if ((object.ReferenceEquals(this.zipRField, value) != true)) {
                    this.zipRField = value;
                    this.RaisePropertyChanged("zipR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public bool carAccess {
            get {
                return this.carAccessField;
            }
            set {
                if ((this.carAccessField.Equals(value) != true)) {
                    this.carAccessField = value;
                    this.RaisePropertyChanged("carAccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string dataSource {
            get {
                return this.dataSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.dataSourceField, value) != true)) {
                    this.dataSourceField = value;
                    this.RaisePropertyChanged("dataSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false, Order=6)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.Point point {
            get {
                return this.pointField;
            }
            set {
                if ((object.ReferenceEquals(this.pointField, value) != true)) {
                    this.pointField = value;
                    this.RaisePropertyChanged("point");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MapOptions", Namespace="http://webservices.maplink2.com.br")]
    [System.SerializableAttribute()]
    public partial class MapOptions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private bool scaleBarField;
        
        private RouteTotalCalculation.Core.ServiceAddressFinder.MapSize mapSizeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool scaleBar {
            get {
                return this.scaleBarField;
            }
            set {
                if ((this.scaleBarField.Equals(value) != true)) {
                    this.scaleBarField = value;
                    this.RaisePropertyChanged("scaleBar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false, Order=1)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.MapSize mapSize {
            get {
                return this.mapSizeField;
            }
            set {
                if ((object.ReferenceEquals(this.mapSizeField, value) != true)) {
                    this.mapSizeField = value;
                    this.RaisePropertyChanged("mapSize");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MapSize", Namespace="http://webservices.maplink2.com.br")]
    [System.SerializableAttribute()]
    public partial class MapSize : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int widthField;
        
        private int heightField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int width {
            get {
                return this.widthField;
            }
            set {
                if ((this.widthField.Equals(value) != true)) {
                    this.widthField = value;
                    this.RaisePropertyChanged("width");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public int height {
            get {
                return this.heightField;
            }
            set {
                if ((this.heightField.Equals(value) != true)) {
                    this.heightField = value;
                    this.RaisePropertyChanged("height");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MapInfo", Namespace="http://webservices.maplink2.com.br")]
    [System.SerializableAttribute()]
    public partial class MapInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string urlField;
        
        private RouteTotalCalculation.Core.ServiceAddressFinder.Extent extentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string url {
            get {
                return this.urlField;
            }
            set {
                if ((object.ReferenceEquals(this.urlField, value) != true)) {
                    this.urlField = value;
                    this.RaisePropertyChanged("url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false, Order=1)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.Extent extent {
            get {
                return this.extentField;
            }
            set {
                if ((object.ReferenceEquals(this.extentField, value) != true)) {
                    this.extentField = value;
                    this.RaisePropertyChanged("extent");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Extent", Namespace="http://webservices.maplink2.com.br")]
    [System.SerializableAttribute()]
    public partial class Extent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private double XMinField;
        
        private double YMinField;
        
        private double XMaxField;
        
        private double YMaxField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double XMin {
            get {
                return this.XMinField;
            }
            set {
                if ((this.XMinField.Equals(value) != true)) {
                    this.XMinField = value;
                    this.RaisePropertyChanged("XMin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double YMin {
            get {
                return this.YMinField;
            }
            set {
                if ((this.YMinField.Equals(value) != true)) {
                    this.YMinField = value;
                    this.RaisePropertyChanged("YMin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public double XMax {
            get {
                return this.XMaxField;
            }
            set {
                if ((this.XMaxField.Equals(value) != true)) {
                    this.XMaxField = value;
                    this.RaisePropertyChanged("XMax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public double YMax {
            get {
                return this.YMaxField;
            }
            set {
                if ((this.YMaxField.Equals(value) != true)) {
                    this.YMaxField = value;
                    this.RaisePropertyChanged("YMax");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CityLocationInfo", Namespace="http://webservices.maplink2.com.br")]
    [System.SerializableAttribute()]
    public partial class CityLocationInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int recordCountField;
        
        private int pageCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceAddressFinder.CityLocation> cityLocationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int recordCount {
            get {
                return this.recordCountField;
            }
            set {
                if ((this.recordCountField.Equals(value) != true)) {
                    this.recordCountField = value;
                    this.RaisePropertyChanged("recordCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public int pageCount {
            get {
                return this.pageCountField;
            }
            set {
                if ((this.pageCountField.Equals(value) != true)) {
                    this.pageCountField = value;
                    this.RaisePropertyChanged("pageCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceAddressFinder.CityLocation> cityLocation {
            get {
                return this.cityLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.cityLocationField, value) != true)) {
                    this.cityLocationField = value;
                    this.RaisePropertyChanged("cityLocation");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CityLocation", Namespace="http://webservices.maplink2.com.br")]
    [System.SerializableAttribute()]
    public partial class CityLocation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private RouteTotalCalculation.Core.ServiceAddressFinder.City cityField;
        
        private RouteTotalCalculation.Core.ServiceAddressFinder.Point pointField;
        
        private bool carAccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string zipRangeStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string zipRangeEndField;
        
        private bool capitalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.City city {
            get {
                return this.cityField;
            }
            set {
                if ((object.ReferenceEquals(this.cityField, value) != true)) {
                    this.cityField = value;
                    this.RaisePropertyChanged("city");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.Point point {
            get {
                return this.pointField;
            }
            set {
                if ((object.ReferenceEquals(this.pointField, value) != true)) {
                    this.pointField = value;
                    this.RaisePropertyChanged("point");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public bool carAccess {
            get {
                return this.carAccessField;
            }
            set {
                if ((this.carAccessField.Equals(value) != true)) {
                    this.carAccessField = value;
                    this.RaisePropertyChanged("carAccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string zipRangeStart {
            get {
                return this.zipRangeStartField;
            }
            set {
                if ((object.ReferenceEquals(this.zipRangeStartField, value) != true)) {
                    this.zipRangeStartField = value;
                    this.RaisePropertyChanged("zipRangeStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string zipRangeEnd {
            get {
                return this.zipRangeEndField;
            }
            set {
                if ((object.ReferenceEquals(this.zipRangeEndField, value) != true)) {
                    this.zipRangeEndField = value;
                    this.RaisePropertyChanged("zipRangeEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public bool capital {
            get {
                return this.capitalField;
            }
            set {
                if ((this.capitalField.Equals(value) != true)) {
                    this.capitalField = value;
                    this.RaisePropertyChanged("capital");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CrossStreetLocation", Namespace="http://webservices.maplink2.com.br")]
    [System.SerializableAttribute()]
    public partial class CrossStreetLocation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private RouteTotalCalculation.Core.ServiceAddressFinder.City cityField;
        
        private RouteTotalCalculation.Core.ServiceAddressFinder.Point pointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string crossStreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string districtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string streetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string zipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.City city {
            get {
                return this.cityField;
            }
            set {
                if ((object.ReferenceEquals(this.cityField, value) != true)) {
                    this.cityField = value;
                    this.RaisePropertyChanged("city");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.Point point {
            get {
                return this.pointField;
            }
            set {
                if ((object.ReferenceEquals(this.pointField, value) != true)) {
                    this.pointField = value;
                    this.RaisePropertyChanged("point");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string crossStreet {
            get {
                return this.crossStreetField;
            }
            set {
                if ((object.ReferenceEquals(this.crossStreetField, value) != true)) {
                    this.crossStreetField = value;
                    this.RaisePropertyChanged("crossStreet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string district {
            get {
                return this.districtField;
            }
            set {
                if ((object.ReferenceEquals(this.districtField, value) != true)) {
                    this.districtField = value;
                    this.RaisePropertyChanged("district");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string street {
            get {
                return this.streetField;
            }
            set {
                if ((object.ReferenceEquals(this.streetField, value) != true)) {
                    this.streetField = value;
                    this.RaisePropertyChanged("street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string zip {
            get {
                return this.zipField;
            }
            set {
                if ((object.ReferenceEquals(this.zipField, value) != true)) {
                    this.zipField = value;
                    this.RaisePropertyChanged("zip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://webservices.maplink2.com.br", ConfigurationName="ServiceAddressFinder.AddressFinderSoap")]
    public interface AddressFinderSoap {
        
        // CODEGEN: Generating message contract since element name name from namespace http://webservices.maplink2.com.br is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://webservices.maplink2.com.br/findPOI", ReplyAction="*")]
        RouteTotalCalculation.Core.ServiceAddressFinder.findPOIResponse findPOI(RouteTotalCalculation.Core.ServiceAddressFinder.findPOIRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://webservices.maplink2.com.br/findPOI", ReplyAction="*")]
        System.IAsyncResult BeginfindPOI(RouteTotalCalculation.Core.ServiceAddressFinder.findPOIRequest request, System.AsyncCallback callback, object asyncState);
        
        RouteTotalCalculation.Core.ServiceAddressFinder.findPOIResponse EndfindPOI(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since element name address from namespace http://webservices.maplink2.com.br is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://webservices.maplink2.com.br/findAddress", ReplyAction="*")]
        RouteTotalCalculation.Core.ServiceAddressFinder.findAddressResponse findAddress(RouteTotalCalculation.Core.ServiceAddressFinder.findAddressRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://webservices.maplink2.com.br/findAddress", ReplyAction="*")]
        System.IAsyncResult BeginfindAddress(RouteTotalCalculation.Core.ServiceAddressFinder.findAddressRequest request, System.AsyncCallback callback, object asyncState);
        
        RouteTotalCalculation.Core.ServiceAddressFinder.findAddressResponse EndfindAddress(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since element name point from namespace http://webservices.maplink2.com.br is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://webservices.maplink2.com.br/getAddress", ReplyAction="*")]
        RouteTotalCalculation.Core.ServiceAddressFinder.getAddressResponse getAddress(RouteTotalCalculation.Core.ServiceAddressFinder.getAddressRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://webservices.maplink2.com.br/getAddress", ReplyAction="*")]
        System.IAsyncResult BegingetAddress(RouteTotalCalculation.Core.ServiceAddressFinder.getAddressRequest request, System.AsyncCallback callback, object asyncState);
        
        RouteTotalCalculation.Core.ServiceAddressFinder.getAddressResponse EndgetAddress(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since element name address from namespace http://webservices.maplink2.com.br is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://webservices.maplink2.com.br/getXY", ReplyAction="*")]
        RouteTotalCalculation.Core.ServiceAddressFinder.getXYResponse getXY(RouteTotalCalculation.Core.ServiceAddressFinder.getXYRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://webservices.maplink2.com.br/getXY", ReplyAction="*")]
        System.IAsyncResult BegingetXY(RouteTotalCalculation.Core.ServiceAddressFinder.getXYRequest request, System.AsyncCallback callback, object asyncState);
        
        RouteTotalCalculation.Core.ServiceAddressFinder.getXYResponse EndgetXY(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since element name address from namespace http://webservices.maplink2.com.br is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://webservices.maplink2.com.br/getXYRadiusWithMap", ReplyAction="*")]
        RouteTotalCalculation.Core.ServiceAddressFinder.getXYRadiusWithMapResponse getXYRadiusWithMap(RouteTotalCalculation.Core.ServiceAddressFinder.getXYRadiusWithMapRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://webservices.maplink2.com.br/getXYRadiusWithMap", ReplyAction="*")]
        System.IAsyncResult BegingetXYRadiusWithMap(RouteTotalCalculation.Core.ServiceAddressFinder.getXYRadiusWithMapRequest request, System.AsyncCallback callback, object asyncState);
        
        RouteTotalCalculation.Core.ServiceAddressFinder.getXYRadiusWithMapResponse EndgetXYRadiusWithMap(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since element name cidade from namespace http://webservices.maplink2.com.br is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://webservices.maplink2.com.br/findCity", ReplyAction="*")]
        RouteTotalCalculation.Core.ServiceAddressFinder.findCityResponse findCity(RouteTotalCalculation.Core.ServiceAddressFinder.findCityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://webservices.maplink2.com.br/findCity", ReplyAction="*")]
        System.IAsyncResult BeginfindCity(RouteTotalCalculation.Core.ServiceAddressFinder.findCityRequest request, System.AsyncCallback callback, object asyncState);
        
        RouteTotalCalculation.Core.ServiceAddressFinder.findCityResponse EndfindCity(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since element name cidade from namespace http://webservices.maplink2.com.br is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://webservices.maplink2.com.br/GetCrossStreetXY", ReplyAction="*")]
        RouteTotalCalculation.Core.ServiceAddressFinder.GetCrossStreetXYResponse GetCrossStreetXY(RouteTotalCalculation.Core.ServiceAddressFinder.GetCrossStreetXYRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://webservices.maplink2.com.br/GetCrossStreetXY", ReplyAction="*")]
        System.IAsyncResult BeginGetCrossStreetXY(RouteTotalCalculation.Core.ServiceAddressFinder.GetCrossStreetXYRequest request, System.AsyncCallback callback, object asyncState);
        
        RouteTotalCalculation.Core.ServiceAddressFinder.GetCrossStreetXYResponse EndGetCrossStreetXY(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since element name point from namespace http://webservices.maplink2.com.br is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://webservices.maplink2.com.br/GetCrossStreetAddress", ReplyAction="*")]
        RouteTotalCalculation.Core.ServiceAddressFinder.GetCrossStreetAddressResponse GetCrossStreetAddress(RouteTotalCalculation.Core.ServiceAddressFinder.GetCrossStreetAddressRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://webservices.maplink2.com.br/GetCrossStreetAddress", ReplyAction="*")]
        System.IAsyncResult BeginGetCrossStreetAddress(RouteTotalCalculation.Core.ServiceAddressFinder.GetCrossStreetAddressRequest request, System.AsyncCallback callback, object asyncState);
        
        RouteTotalCalculation.Core.ServiceAddressFinder.GetCrossStreetAddressResponse EndGetCrossStreetAddress(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class findPOIRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="findPOI", Namespace="http://webservices.maplink2.com.br", Order=0)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.findPOIRequestBody Body;
        
        public findPOIRequest() {
        }
        
        public findPOIRequest(RouteTotalCalculation.Core.ServiceAddressFinder.findPOIRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://webservices.maplink2.com.br")]
    public partial class findPOIRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string name;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.City city;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.ResultRange resultRange;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string token;
        
        public findPOIRequestBody() {
        }
        
        public findPOIRequestBody(string name, RouteTotalCalculation.Core.ServiceAddressFinder.City city, RouteTotalCalculation.Core.ServiceAddressFinder.ResultRange resultRange, string token) {
            this.name = name;
            this.city = city;
            this.resultRange = resultRange;
            this.token = token;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class findPOIResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="findPOIResponse", Namespace="http://webservices.maplink2.com.br", Order=0)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.findPOIResponseBody Body;
        
        public findPOIResponse() {
        }
        
        public findPOIResponse(RouteTotalCalculation.Core.ServiceAddressFinder.findPOIResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://webservices.maplink2.com.br")]
    public partial class findPOIResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.POIInfo findPOIResult;
        
        public findPOIResponseBody() {
        }
        
        public findPOIResponseBody(RouteTotalCalculation.Core.ServiceAddressFinder.POIInfo findPOIResult) {
            this.findPOIResult = findPOIResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class findAddressRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="findAddress", Namespace="http://webservices.maplink2.com.br", Order=0)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.findAddressRequestBody Body;
        
        public findAddressRequest() {
        }
        
        public findAddressRequest(RouteTotalCalculation.Core.ServiceAddressFinder.findAddressRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://webservices.maplink2.com.br")]
    public partial class findAddressRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.Address address;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.AddressOptions ao;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string token;
        
        public findAddressRequestBody() {
        }
        
        public findAddressRequestBody(RouteTotalCalculation.Core.ServiceAddressFinder.Address address, RouteTotalCalculation.Core.ServiceAddressFinder.AddressOptions ao, string token) {
            this.address = address;
            this.ao = ao;
            this.token = token;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class findAddressResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="findAddressResponse", Namespace="http://webservices.maplink2.com.br", Order=0)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.findAddressResponseBody Body;
        
        public findAddressResponse() {
        }
        
        public findAddressResponse(RouteTotalCalculation.Core.ServiceAddressFinder.findAddressResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://webservices.maplink2.com.br")]
    public partial class findAddressResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.AddressInfo findAddressResult;
        
        public findAddressResponseBody() {
        }
        
        public findAddressResponseBody(RouteTotalCalculation.Core.ServiceAddressFinder.AddressInfo findAddressResult) {
            this.findAddressResult = findAddressResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getAddressRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getAddress", Namespace="http://webservices.maplink2.com.br", Order=0)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.getAddressRequestBody Body;
        
        public getAddressRequest() {
        }
        
        public getAddressRequest(RouteTotalCalculation.Core.ServiceAddressFinder.getAddressRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://webservices.maplink2.com.br")]
    public partial class getAddressRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.Point point;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string token;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public double tolerance;
        
        public getAddressRequestBody() {
        }
        
        public getAddressRequestBody(RouteTotalCalculation.Core.ServiceAddressFinder.Point point, string token, double tolerance) {
            this.point = point;
            this.token = token;
            this.tolerance = tolerance;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getAddressResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getAddressResponse", Namespace="http://webservices.maplink2.com.br", Order=0)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.getAddressResponseBody Body;
        
        public getAddressResponse() {
        }
        
        public getAddressResponse(RouteTotalCalculation.Core.ServiceAddressFinder.getAddressResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://webservices.maplink2.com.br")]
    public partial class getAddressResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.AddressLocation getAddressResult;
        
        public getAddressResponseBody() {
        }
        
        public getAddressResponseBody(RouteTotalCalculation.Core.ServiceAddressFinder.AddressLocation getAddressResult) {
            this.getAddressResult = getAddressResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getXYRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getXY", Namespace="http://webservices.maplink2.com.br", Order=0)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.getXYRequestBody Body;
        
        public getXYRequest() {
        }
        
        public getXYRequest(RouteTotalCalculation.Core.ServiceAddressFinder.getXYRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://webservices.maplink2.com.br")]
    public partial class getXYRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.Address address;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string token;
        
        public getXYRequestBody() {
        }
        
        public getXYRequestBody(RouteTotalCalculation.Core.ServiceAddressFinder.Address address, string token) {
            this.address = address;
            this.token = token;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getXYResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getXYResponse", Namespace="http://webservices.maplink2.com.br", Order=0)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.getXYResponseBody Body;
        
        public getXYResponse() {
        }
        
        public getXYResponse(RouteTotalCalculation.Core.ServiceAddressFinder.getXYResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://webservices.maplink2.com.br")]
    public partial class getXYResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.Point getXYResult;
        
        public getXYResponseBody() {
        }
        
        public getXYResponseBody(RouteTotalCalculation.Core.ServiceAddressFinder.Point getXYResult) {
            this.getXYResult = getXYResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getXYRadiusWithMapRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getXYRadiusWithMap", Namespace="http://webservices.maplink2.com.br", Order=0)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.getXYRadiusWithMapRequestBody Body;
        
        public getXYRadiusWithMapRequest() {
        }
        
        public getXYRadiusWithMapRequest(RouteTotalCalculation.Core.ServiceAddressFinder.getXYRadiusWithMapRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://webservices.maplink2.com.br")]
    public partial class getXYRadiusWithMapRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.Address address;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.MapOptions mo;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int radius;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string token;
        
        public getXYRadiusWithMapRequestBody() {
        }
        
        public getXYRadiusWithMapRequestBody(RouteTotalCalculation.Core.ServiceAddressFinder.Address address, RouteTotalCalculation.Core.ServiceAddressFinder.MapOptions mo, int radius, string token) {
            this.address = address;
            this.mo = mo;
            this.radius = radius;
            this.token = token;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getXYRadiusWithMapResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getXYRadiusWithMapResponse", Namespace="http://webservices.maplink2.com.br", Order=0)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.getXYRadiusWithMapResponseBody Body;
        
        public getXYRadiusWithMapResponse() {
        }
        
        public getXYRadiusWithMapResponse(RouteTotalCalculation.Core.ServiceAddressFinder.getXYRadiusWithMapResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://webservices.maplink2.com.br")]
    public partial class getXYRadiusWithMapResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.MapInfo getXYRadiusWithMapResult;
        
        public getXYRadiusWithMapResponseBody() {
        }
        
        public getXYRadiusWithMapResponseBody(RouteTotalCalculation.Core.ServiceAddressFinder.MapInfo getXYRadiusWithMapResult) {
            this.getXYRadiusWithMapResult = getXYRadiusWithMapResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class findCityRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="findCity", Namespace="http://webservices.maplink2.com.br", Order=0)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.findCityRequestBody Body;
        
        public findCityRequest() {
        }
        
        public findCityRequest(RouteTotalCalculation.Core.ServiceAddressFinder.findCityRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://webservices.maplink2.com.br")]
    public partial class findCityRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.City cidade;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.AddressOptions ao;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string token;
        
        public findCityRequestBody() {
        }
        
        public findCityRequestBody(RouteTotalCalculation.Core.ServiceAddressFinder.City cidade, RouteTotalCalculation.Core.ServiceAddressFinder.AddressOptions ao, string token) {
            this.cidade = cidade;
            this.ao = ao;
            this.token = token;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class findCityResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="findCityResponse", Namespace="http://webservices.maplink2.com.br", Order=0)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.findCityResponseBody Body;
        
        public findCityResponse() {
        }
        
        public findCityResponse(RouteTotalCalculation.Core.ServiceAddressFinder.findCityResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://webservices.maplink2.com.br")]
    public partial class findCityResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.CityLocationInfo findCityResult;
        
        public findCityResponseBody() {
        }
        
        public findCityResponseBody(RouteTotalCalculation.Core.ServiceAddressFinder.CityLocationInfo findCityResult) {
            this.findCityResult = findCityResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetCrossStreetXYRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetCrossStreetXY", Namespace="http://webservices.maplink2.com.br", Order=0)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.GetCrossStreetXYRequestBody Body;
        
        public GetCrossStreetXYRequest() {
        }
        
        public GetCrossStreetXYRequest(RouteTotalCalculation.Core.ServiceAddressFinder.GetCrossStreetXYRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://webservices.maplink2.com.br")]
    public partial class GetCrossStreetXYRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.City cidade;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string firstStreet;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string secondStreet;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string token;
        
        public GetCrossStreetXYRequestBody() {
        }
        
        public GetCrossStreetXYRequestBody(RouteTotalCalculation.Core.ServiceAddressFinder.City cidade, string firstStreet, string secondStreet, string token) {
            this.cidade = cidade;
            this.firstStreet = firstStreet;
            this.secondStreet = secondStreet;
            this.token = token;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetCrossStreetXYResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetCrossStreetXYResponse", Namespace="http://webservices.maplink2.com.br", Order=0)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.GetCrossStreetXYResponseBody Body;
        
        public GetCrossStreetXYResponse() {
        }
        
        public GetCrossStreetXYResponse(RouteTotalCalculation.Core.ServiceAddressFinder.GetCrossStreetXYResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://webservices.maplink2.com.br")]
    public partial class GetCrossStreetXYResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceAddressFinder.CrossStreetLocation> GetCrossStreetXYResult;
        
        public GetCrossStreetXYResponseBody() {
        }
        
        public GetCrossStreetXYResponseBody(System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceAddressFinder.CrossStreetLocation> GetCrossStreetXYResult) {
            this.GetCrossStreetXYResult = GetCrossStreetXYResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetCrossStreetAddressRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetCrossStreetAddress", Namespace="http://webservices.maplink2.com.br", Order=0)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.GetCrossStreetAddressRequestBody Body;
        
        public GetCrossStreetAddressRequest() {
        }
        
        public GetCrossStreetAddressRequest(RouteTotalCalculation.Core.ServiceAddressFinder.GetCrossStreetAddressRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://webservices.maplink2.com.br")]
    public partial class GetCrossStreetAddressRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.Point point;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string token;
        
        public GetCrossStreetAddressRequestBody() {
        }
        
        public GetCrossStreetAddressRequestBody(RouteTotalCalculation.Core.ServiceAddressFinder.Point point, string token) {
            this.point = point;
            this.token = token;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetCrossStreetAddressResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetCrossStreetAddressResponse", Namespace="http://webservices.maplink2.com.br", Order=0)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.GetCrossStreetAddressResponseBody Body;
        
        public GetCrossStreetAddressResponse() {
        }
        
        public GetCrossStreetAddressResponse(RouteTotalCalculation.Core.ServiceAddressFinder.GetCrossStreetAddressResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://webservices.maplink2.com.br")]
    public partial class GetCrossStreetAddressResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceAddressFinder.AddressLocation> GetCrossStreetAddressResult;
        
        public GetCrossStreetAddressResponseBody() {
        }
        
        public GetCrossStreetAddressResponseBody(System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceAddressFinder.AddressLocation> GetCrossStreetAddressResult) {
            this.GetCrossStreetAddressResult = GetCrossStreetAddressResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface AddressFinderSoapChannel : RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class findPOICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public findPOICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public RouteTotalCalculation.Core.ServiceAddressFinder.POIInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((RouteTotalCalculation.Core.ServiceAddressFinder.POIInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class findAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public findAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public RouteTotalCalculation.Core.ServiceAddressFinder.AddressInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((RouteTotalCalculation.Core.ServiceAddressFinder.AddressInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public RouteTotalCalculation.Core.ServiceAddressFinder.AddressLocation Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((RouteTotalCalculation.Core.ServiceAddressFinder.AddressLocation)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getXYCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getXYCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public RouteTotalCalculation.Core.ServiceAddressFinder.Point Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((RouteTotalCalculation.Core.ServiceAddressFinder.Point)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getXYRadiusWithMapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getXYRadiusWithMapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public RouteTotalCalculation.Core.ServiceAddressFinder.MapInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((RouteTotalCalculation.Core.ServiceAddressFinder.MapInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class findCityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public findCityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public RouteTotalCalculation.Core.ServiceAddressFinder.CityLocationInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((RouteTotalCalculation.Core.ServiceAddressFinder.CityLocationInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCrossStreetXYCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCrossStreetXYCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceAddressFinder.CrossStreetLocation> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceAddressFinder.CrossStreetLocation>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCrossStreetAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCrossStreetAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceAddressFinder.AddressLocation> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceAddressFinder.AddressLocation>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddressFinderSoapClient : System.ServiceModel.ClientBase<RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap>, RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap {
        
        private BeginOperationDelegate onBeginfindPOIDelegate;
        
        private EndOperationDelegate onEndfindPOIDelegate;
        
        private System.Threading.SendOrPostCallback onfindPOICompletedDelegate;
        
        private BeginOperationDelegate onBeginfindAddressDelegate;
        
        private EndOperationDelegate onEndfindAddressDelegate;
        
        private System.Threading.SendOrPostCallback onfindAddressCompletedDelegate;
        
        private BeginOperationDelegate onBegingetAddressDelegate;
        
        private EndOperationDelegate onEndgetAddressDelegate;
        
        private System.Threading.SendOrPostCallback ongetAddressCompletedDelegate;
        
        private BeginOperationDelegate onBegingetXYDelegate;
        
        private EndOperationDelegate onEndgetXYDelegate;
        
        private System.Threading.SendOrPostCallback ongetXYCompletedDelegate;
        
        private BeginOperationDelegate onBegingetXYRadiusWithMapDelegate;
        
        private EndOperationDelegate onEndgetXYRadiusWithMapDelegate;
        
        private System.Threading.SendOrPostCallback ongetXYRadiusWithMapCompletedDelegate;
        
        private BeginOperationDelegate onBeginfindCityDelegate;
        
        private EndOperationDelegate onEndfindCityDelegate;
        
        private System.Threading.SendOrPostCallback onfindCityCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCrossStreetXYDelegate;
        
        private EndOperationDelegate onEndGetCrossStreetXYDelegate;
        
        private System.Threading.SendOrPostCallback onGetCrossStreetXYCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCrossStreetAddressDelegate;
        
        private EndOperationDelegate onEndGetCrossStreetAddressDelegate;
        
        private System.Threading.SendOrPostCallback onGetCrossStreetAddressCompletedDelegate;
        
        public AddressFinderSoapClient() {
        }
        
        public AddressFinderSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AddressFinderSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AddressFinderSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AddressFinderSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<findPOICompletedEventArgs> findPOICompleted;
        
        public event System.EventHandler<findAddressCompletedEventArgs> findAddressCompleted;
        
        public event System.EventHandler<getAddressCompletedEventArgs> getAddressCompleted;
        
        public event System.EventHandler<getXYCompletedEventArgs> getXYCompleted;
        
        public event System.EventHandler<getXYRadiusWithMapCompletedEventArgs> getXYRadiusWithMapCompleted;
        
        public event System.EventHandler<findCityCompletedEventArgs> findCityCompleted;
        
        public event System.EventHandler<GetCrossStreetXYCompletedEventArgs> GetCrossStreetXYCompleted;
        
        public event System.EventHandler<GetCrossStreetAddressCompletedEventArgs> GetCrossStreetAddressCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RouteTotalCalculation.Core.ServiceAddressFinder.findPOIResponse RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap.findPOI(RouteTotalCalculation.Core.ServiceAddressFinder.findPOIRequest request) {
            return base.Channel.findPOI(request);
        }
        
        public RouteTotalCalculation.Core.ServiceAddressFinder.POIInfo findPOI(string name, RouteTotalCalculation.Core.ServiceAddressFinder.City city, RouteTotalCalculation.Core.ServiceAddressFinder.ResultRange resultRange, string token) {
            RouteTotalCalculation.Core.ServiceAddressFinder.findPOIRequest inValue = new RouteTotalCalculation.Core.ServiceAddressFinder.findPOIRequest();
            inValue.Body = new RouteTotalCalculation.Core.ServiceAddressFinder.findPOIRequestBody();
            inValue.Body.name = name;
            inValue.Body.city = city;
            inValue.Body.resultRange = resultRange;
            inValue.Body.token = token;
            RouteTotalCalculation.Core.ServiceAddressFinder.findPOIResponse retVal = ((RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap)(this)).findPOI(inValue);
            return retVal.Body.findPOIResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap.BeginfindPOI(RouteTotalCalculation.Core.ServiceAddressFinder.findPOIRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginfindPOI(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginfindPOI(string name, RouteTotalCalculation.Core.ServiceAddressFinder.City city, RouteTotalCalculation.Core.ServiceAddressFinder.ResultRange resultRange, string token, System.AsyncCallback callback, object asyncState) {
            RouteTotalCalculation.Core.ServiceAddressFinder.findPOIRequest inValue = new RouteTotalCalculation.Core.ServiceAddressFinder.findPOIRequest();
            inValue.Body = new RouteTotalCalculation.Core.ServiceAddressFinder.findPOIRequestBody();
            inValue.Body.name = name;
            inValue.Body.city = city;
            inValue.Body.resultRange = resultRange;
            inValue.Body.token = token;
            return ((RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap)(this)).BeginfindPOI(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RouteTotalCalculation.Core.ServiceAddressFinder.findPOIResponse RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap.EndfindPOI(System.IAsyncResult result) {
            return base.Channel.EndfindPOI(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.POIInfo EndfindPOI(System.IAsyncResult result) {
            RouteTotalCalculation.Core.ServiceAddressFinder.findPOIResponse retVal = ((RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap)(this)).EndfindPOI(result);
            return retVal.Body.findPOIResult;
        }
        
        private System.IAsyncResult OnBeginfindPOI(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            RouteTotalCalculation.Core.ServiceAddressFinder.City city = ((RouteTotalCalculation.Core.ServiceAddressFinder.City)(inValues[1]));
            RouteTotalCalculation.Core.ServiceAddressFinder.ResultRange resultRange = ((RouteTotalCalculation.Core.ServiceAddressFinder.ResultRange)(inValues[2]));
            string token = ((string)(inValues[3]));
            return this.BeginfindPOI(name, city, resultRange, token, callback, asyncState);
        }
        
        private object[] OnEndfindPOI(System.IAsyncResult result) {
            RouteTotalCalculation.Core.ServiceAddressFinder.POIInfo retVal = this.EndfindPOI(result);
            return new object[] {
                    retVal};
        }
        
        private void OnfindPOICompleted(object state) {
            if ((this.findPOICompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.findPOICompleted(this, new findPOICompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void findPOIAsync(string name, RouteTotalCalculation.Core.ServiceAddressFinder.City city, RouteTotalCalculation.Core.ServiceAddressFinder.ResultRange resultRange, string token) {
            this.findPOIAsync(name, city, resultRange, token, null);
        }
        
        public void findPOIAsync(string name, RouteTotalCalculation.Core.ServiceAddressFinder.City city, RouteTotalCalculation.Core.ServiceAddressFinder.ResultRange resultRange, string token, object userState) {
            if ((this.onBeginfindPOIDelegate == null)) {
                this.onBeginfindPOIDelegate = new BeginOperationDelegate(this.OnBeginfindPOI);
            }
            if ((this.onEndfindPOIDelegate == null)) {
                this.onEndfindPOIDelegate = new EndOperationDelegate(this.OnEndfindPOI);
            }
            if ((this.onfindPOICompletedDelegate == null)) {
                this.onfindPOICompletedDelegate = new System.Threading.SendOrPostCallback(this.OnfindPOICompleted);
            }
            base.InvokeAsync(this.onBeginfindPOIDelegate, new object[] {
                        name,
                        city,
                        resultRange,
                        token}, this.onEndfindPOIDelegate, this.onfindPOICompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RouteTotalCalculation.Core.ServiceAddressFinder.findAddressResponse RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap.findAddress(RouteTotalCalculation.Core.ServiceAddressFinder.findAddressRequest request) {
            return base.Channel.findAddress(request);
        }
        
        public RouteTotalCalculation.Core.ServiceAddressFinder.AddressInfo findAddress(RouteTotalCalculation.Core.ServiceAddressFinder.Address address, RouteTotalCalculation.Core.ServiceAddressFinder.AddressOptions ao, string token) {
            RouteTotalCalculation.Core.ServiceAddressFinder.findAddressRequest inValue = new RouteTotalCalculation.Core.ServiceAddressFinder.findAddressRequest();
            inValue.Body = new RouteTotalCalculation.Core.ServiceAddressFinder.findAddressRequestBody();
            inValue.Body.address = address;
            inValue.Body.ao = ao;
            inValue.Body.token = token;
            RouteTotalCalculation.Core.ServiceAddressFinder.findAddressResponse retVal = ((RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap)(this)).findAddress(inValue);
            return retVal.Body.findAddressResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap.BeginfindAddress(RouteTotalCalculation.Core.ServiceAddressFinder.findAddressRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginfindAddress(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginfindAddress(RouteTotalCalculation.Core.ServiceAddressFinder.Address address, RouteTotalCalculation.Core.ServiceAddressFinder.AddressOptions ao, string token, System.AsyncCallback callback, object asyncState) {
            RouteTotalCalculation.Core.ServiceAddressFinder.findAddressRequest inValue = new RouteTotalCalculation.Core.ServiceAddressFinder.findAddressRequest();
            inValue.Body = new RouteTotalCalculation.Core.ServiceAddressFinder.findAddressRequestBody();
            inValue.Body.address = address;
            inValue.Body.ao = ao;
            inValue.Body.token = token;
            return ((RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap)(this)).BeginfindAddress(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RouteTotalCalculation.Core.ServiceAddressFinder.findAddressResponse RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap.EndfindAddress(System.IAsyncResult result) {
            return base.Channel.EndfindAddress(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.AddressInfo EndfindAddress(System.IAsyncResult result) {
            RouteTotalCalculation.Core.ServiceAddressFinder.findAddressResponse retVal = ((RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap)(this)).EndfindAddress(result);
            return retVal.Body.findAddressResult;
        }
        
        private System.IAsyncResult OnBeginfindAddress(object[] inValues, System.AsyncCallback callback, object asyncState) {
            RouteTotalCalculation.Core.ServiceAddressFinder.Address address = ((RouteTotalCalculation.Core.ServiceAddressFinder.Address)(inValues[0]));
            RouteTotalCalculation.Core.ServiceAddressFinder.AddressOptions ao = ((RouteTotalCalculation.Core.ServiceAddressFinder.AddressOptions)(inValues[1]));
            string token = ((string)(inValues[2]));
            return this.BeginfindAddress(address, ao, token, callback, asyncState);
        }
        
        private object[] OnEndfindAddress(System.IAsyncResult result) {
            RouteTotalCalculation.Core.ServiceAddressFinder.AddressInfo retVal = this.EndfindAddress(result);
            return new object[] {
                    retVal};
        }
        
        private void OnfindAddressCompleted(object state) {
            if ((this.findAddressCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.findAddressCompleted(this, new findAddressCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void findAddressAsync(RouteTotalCalculation.Core.ServiceAddressFinder.Address address, RouteTotalCalculation.Core.ServiceAddressFinder.AddressOptions ao, string token) {
            this.findAddressAsync(address, ao, token, null);
        }
        
        public void findAddressAsync(RouteTotalCalculation.Core.ServiceAddressFinder.Address address, RouteTotalCalculation.Core.ServiceAddressFinder.AddressOptions ao, string token, object userState) {
            if ((this.onBeginfindAddressDelegate == null)) {
                this.onBeginfindAddressDelegate = new BeginOperationDelegate(this.OnBeginfindAddress);
            }
            if ((this.onEndfindAddressDelegate == null)) {
                this.onEndfindAddressDelegate = new EndOperationDelegate(this.OnEndfindAddress);
            }
            if ((this.onfindAddressCompletedDelegate == null)) {
                this.onfindAddressCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnfindAddressCompleted);
            }
            base.InvokeAsync(this.onBeginfindAddressDelegate, new object[] {
                        address,
                        ao,
                        token}, this.onEndfindAddressDelegate, this.onfindAddressCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RouteTotalCalculation.Core.ServiceAddressFinder.getAddressResponse RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap.getAddress(RouteTotalCalculation.Core.ServiceAddressFinder.getAddressRequest request) {
            return base.Channel.getAddress(request);
        }
        
        public RouteTotalCalculation.Core.ServiceAddressFinder.AddressLocation getAddress(RouteTotalCalculation.Core.ServiceAddressFinder.Point point, string token, double tolerance) {
            RouteTotalCalculation.Core.ServiceAddressFinder.getAddressRequest inValue = new RouteTotalCalculation.Core.ServiceAddressFinder.getAddressRequest();
            inValue.Body = new RouteTotalCalculation.Core.ServiceAddressFinder.getAddressRequestBody();
            inValue.Body.point = point;
            inValue.Body.token = token;
            inValue.Body.tolerance = tolerance;
            RouteTotalCalculation.Core.ServiceAddressFinder.getAddressResponse retVal = ((RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap)(this)).getAddress(inValue);
            return retVal.Body.getAddressResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap.BegingetAddress(RouteTotalCalculation.Core.ServiceAddressFinder.getAddressRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetAddress(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetAddress(RouteTotalCalculation.Core.ServiceAddressFinder.Point point, string token, double tolerance, System.AsyncCallback callback, object asyncState) {
            RouteTotalCalculation.Core.ServiceAddressFinder.getAddressRequest inValue = new RouteTotalCalculation.Core.ServiceAddressFinder.getAddressRequest();
            inValue.Body = new RouteTotalCalculation.Core.ServiceAddressFinder.getAddressRequestBody();
            inValue.Body.point = point;
            inValue.Body.token = token;
            inValue.Body.tolerance = tolerance;
            return ((RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap)(this)).BegingetAddress(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RouteTotalCalculation.Core.ServiceAddressFinder.getAddressResponse RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap.EndgetAddress(System.IAsyncResult result) {
            return base.Channel.EndgetAddress(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.AddressLocation EndgetAddress(System.IAsyncResult result) {
            RouteTotalCalculation.Core.ServiceAddressFinder.getAddressResponse retVal = ((RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap)(this)).EndgetAddress(result);
            return retVal.Body.getAddressResult;
        }
        
        private System.IAsyncResult OnBegingetAddress(object[] inValues, System.AsyncCallback callback, object asyncState) {
            RouteTotalCalculation.Core.ServiceAddressFinder.Point point = ((RouteTotalCalculation.Core.ServiceAddressFinder.Point)(inValues[0]));
            string token = ((string)(inValues[1]));
            double tolerance = ((double)(inValues[2]));
            return this.BegingetAddress(point, token, tolerance, callback, asyncState);
        }
        
        private object[] OnEndgetAddress(System.IAsyncResult result) {
            RouteTotalCalculation.Core.ServiceAddressFinder.AddressLocation retVal = this.EndgetAddress(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetAddressCompleted(object state) {
            if ((this.getAddressCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getAddressCompleted(this, new getAddressCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getAddressAsync(RouteTotalCalculation.Core.ServiceAddressFinder.Point point, string token, double tolerance) {
            this.getAddressAsync(point, token, tolerance, null);
        }
        
        public void getAddressAsync(RouteTotalCalculation.Core.ServiceAddressFinder.Point point, string token, double tolerance, object userState) {
            if ((this.onBegingetAddressDelegate == null)) {
                this.onBegingetAddressDelegate = new BeginOperationDelegate(this.OnBegingetAddress);
            }
            if ((this.onEndgetAddressDelegate == null)) {
                this.onEndgetAddressDelegate = new EndOperationDelegate(this.OnEndgetAddress);
            }
            if ((this.ongetAddressCompletedDelegate == null)) {
                this.ongetAddressCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetAddressCompleted);
            }
            base.InvokeAsync(this.onBegingetAddressDelegate, new object[] {
                        point,
                        token,
                        tolerance}, this.onEndgetAddressDelegate, this.ongetAddressCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RouteTotalCalculation.Core.ServiceAddressFinder.getXYResponse RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap.getXY(RouteTotalCalculation.Core.ServiceAddressFinder.getXYRequest request) {
            return base.Channel.getXY(request);
        }
        
        public RouteTotalCalculation.Core.ServiceAddressFinder.Point getXY(RouteTotalCalculation.Core.ServiceAddressFinder.Address address, string token) {
            RouteTotalCalculation.Core.ServiceAddressFinder.getXYRequest inValue = new RouteTotalCalculation.Core.ServiceAddressFinder.getXYRequest();
            inValue.Body = new RouteTotalCalculation.Core.ServiceAddressFinder.getXYRequestBody();
            inValue.Body.address = address;
            inValue.Body.token = token;
            RouteTotalCalculation.Core.ServiceAddressFinder.getXYResponse retVal = ((RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap)(this)).getXY(inValue);
            return retVal.Body.getXYResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap.BegingetXY(RouteTotalCalculation.Core.ServiceAddressFinder.getXYRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetXY(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetXY(RouteTotalCalculation.Core.ServiceAddressFinder.Address address, string token, System.AsyncCallback callback, object asyncState) {
            RouteTotalCalculation.Core.ServiceAddressFinder.getXYRequest inValue = new RouteTotalCalculation.Core.ServiceAddressFinder.getXYRequest();
            inValue.Body = new RouteTotalCalculation.Core.ServiceAddressFinder.getXYRequestBody();
            inValue.Body.address = address;
            inValue.Body.token = token;
            return ((RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap)(this)).BegingetXY(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RouteTotalCalculation.Core.ServiceAddressFinder.getXYResponse RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap.EndgetXY(System.IAsyncResult result) {
            return base.Channel.EndgetXY(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.Point EndgetXY(System.IAsyncResult result) {
            RouteTotalCalculation.Core.ServiceAddressFinder.getXYResponse retVal = ((RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap)(this)).EndgetXY(result);
            return retVal.Body.getXYResult;
        }
        
        private System.IAsyncResult OnBegingetXY(object[] inValues, System.AsyncCallback callback, object asyncState) {
            RouteTotalCalculation.Core.ServiceAddressFinder.Address address = ((RouteTotalCalculation.Core.ServiceAddressFinder.Address)(inValues[0]));
            string token = ((string)(inValues[1]));
            return this.BegingetXY(address, token, callback, asyncState);
        }
        
        private object[] OnEndgetXY(System.IAsyncResult result) {
            RouteTotalCalculation.Core.ServiceAddressFinder.Point retVal = this.EndgetXY(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetXYCompleted(object state) {
            if ((this.getXYCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getXYCompleted(this, new getXYCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getXYAsync(RouteTotalCalculation.Core.ServiceAddressFinder.Address address, string token) {
            this.getXYAsync(address, token, null);
        }
        
        public void getXYAsync(RouteTotalCalculation.Core.ServiceAddressFinder.Address address, string token, object userState) {
            if ((this.onBegingetXYDelegate == null)) {
                this.onBegingetXYDelegate = new BeginOperationDelegate(this.OnBegingetXY);
            }
            if ((this.onEndgetXYDelegate == null)) {
                this.onEndgetXYDelegate = new EndOperationDelegate(this.OnEndgetXY);
            }
            if ((this.ongetXYCompletedDelegate == null)) {
                this.ongetXYCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetXYCompleted);
            }
            base.InvokeAsync(this.onBegingetXYDelegate, new object[] {
                        address,
                        token}, this.onEndgetXYDelegate, this.ongetXYCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RouteTotalCalculation.Core.ServiceAddressFinder.getXYRadiusWithMapResponse RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap.getXYRadiusWithMap(RouteTotalCalculation.Core.ServiceAddressFinder.getXYRadiusWithMapRequest request) {
            return base.Channel.getXYRadiusWithMap(request);
        }
        
        public RouteTotalCalculation.Core.ServiceAddressFinder.MapInfo getXYRadiusWithMap(RouteTotalCalculation.Core.ServiceAddressFinder.Address address, RouteTotalCalculation.Core.ServiceAddressFinder.MapOptions mo, int radius, string token) {
            RouteTotalCalculation.Core.ServiceAddressFinder.getXYRadiusWithMapRequest inValue = new RouteTotalCalculation.Core.ServiceAddressFinder.getXYRadiusWithMapRequest();
            inValue.Body = new RouteTotalCalculation.Core.ServiceAddressFinder.getXYRadiusWithMapRequestBody();
            inValue.Body.address = address;
            inValue.Body.mo = mo;
            inValue.Body.radius = radius;
            inValue.Body.token = token;
            RouteTotalCalculation.Core.ServiceAddressFinder.getXYRadiusWithMapResponse retVal = ((RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap)(this)).getXYRadiusWithMap(inValue);
            return retVal.Body.getXYRadiusWithMapResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap.BegingetXYRadiusWithMap(RouteTotalCalculation.Core.ServiceAddressFinder.getXYRadiusWithMapRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetXYRadiusWithMap(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetXYRadiusWithMap(RouteTotalCalculation.Core.ServiceAddressFinder.Address address, RouteTotalCalculation.Core.ServiceAddressFinder.MapOptions mo, int radius, string token, System.AsyncCallback callback, object asyncState) {
            RouteTotalCalculation.Core.ServiceAddressFinder.getXYRadiusWithMapRequest inValue = new RouteTotalCalculation.Core.ServiceAddressFinder.getXYRadiusWithMapRequest();
            inValue.Body = new RouteTotalCalculation.Core.ServiceAddressFinder.getXYRadiusWithMapRequestBody();
            inValue.Body.address = address;
            inValue.Body.mo = mo;
            inValue.Body.radius = radius;
            inValue.Body.token = token;
            return ((RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap)(this)).BegingetXYRadiusWithMap(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RouteTotalCalculation.Core.ServiceAddressFinder.getXYRadiusWithMapResponse RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap.EndgetXYRadiusWithMap(System.IAsyncResult result) {
            return base.Channel.EndgetXYRadiusWithMap(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.MapInfo EndgetXYRadiusWithMap(System.IAsyncResult result) {
            RouteTotalCalculation.Core.ServiceAddressFinder.getXYRadiusWithMapResponse retVal = ((RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap)(this)).EndgetXYRadiusWithMap(result);
            return retVal.Body.getXYRadiusWithMapResult;
        }
        
        private System.IAsyncResult OnBegingetXYRadiusWithMap(object[] inValues, System.AsyncCallback callback, object asyncState) {
            RouteTotalCalculation.Core.ServiceAddressFinder.Address address = ((RouteTotalCalculation.Core.ServiceAddressFinder.Address)(inValues[0]));
            RouteTotalCalculation.Core.ServiceAddressFinder.MapOptions mo = ((RouteTotalCalculation.Core.ServiceAddressFinder.MapOptions)(inValues[1]));
            int radius = ((int)(inValues[2]));
            string token = ((string)(inValues[3]));
            return this.BegingetXYRadiusWithMap(address, mo, radius, token, callback, asyncState);
        }
        
        private object[] OnEndgetXYRadiusWithMap(System.IAsyncResult result) {
            RouteTotalCalculation.Core.ServiceAddressFinder.MapInfo retVal = this.EndgetXYRadiusWithMap(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetXYRadiusWithMapCompleted(object state) {
            if ((this.getXYRadiusWithMapCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getXYRadiusWithMapCompleted(this, new getXYRadiusWithMapCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getXYRadiusWithMapAsync(RouteTotalCalculation.Core.ServiceAddressFinder.Address address, RouteTotalCalculation.Core.ServiceAddressFinder.MapOptions mo, int radius, string token) {
            this.getXYRadiusWithMapAsync(address, mo, radius, token, null);
        }
        
        public void getXYRadiusWithMapAsync(RouteTotalCalculation.Core.ServiceAddressFinder.Address address, RouteTotalCalculation.Core.ServiceAddressFinder.MapOptions mo, int radius, string token, object userState) {
            if ((this.onBegingetXYRadiusWithMapDelegate == null)) {
                this.onBegingetXYRadiusWithMapDelegate = new BeginOperationDelegate(this.OnBegingetXYRadiusWithMap);
            }
            if ((this.onEndgetXYRadiusWithMapDelegate == null)) {
                this.onEndgetXYRadiusWithMapDelegate = new EndOperationDelegate(this.OnEndgetXYRadiusWithMap);
            }
            if ((this.ongetXYRadiusWithMapCompletedDelegate == null)) {
                this.ongetXYRadiusWithMapCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetXYRadiusWithMapCompleted);
            }
            base.InvokeAsync(this.onBegingetXYRadiusWithMapDelegate, new object[] {
                        address,
                        mo,
                        radius,
                        token}, this.onEndgetXYRadiusWithMapDelegate, this.ongetXYRadiusWithMapCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RouteTotalCalculation.Core.ServiceAddressFinder.findCityResponse RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap.findCity(RouteTotalCalculation.Core.ServiceAddressFinder.findCityRequest request) {
            return base.Channel.findCity(request);
        }
        
        public RouteTotalCalculation.Core.ServiceAddressFinder.CityLocationInfo findCity(RouteTotalCalculation.Core.ServiceAddressFinder.City cidade, RouteTotalCalculation.Core.ServiceAddressFinder.AddressOptions ao, string token) {
            RouteTotalCalculation.Core.ServiceAddressFinder.findCityRequest inValue = new RouteTotalCalculation.Core.ServiceAddressFinder.findCityRequest();
            inValue.Body = new RouteTotalCalculation.Core.ServiceAddressFinder.findCityRequestBody();
            inValue.Body.cidade = cidade;
            inValue.Body.ao = ao;
            inValue.Body.token = token;
            RouteTotalCalculation.Core.ServiceAddressFinder.findCityResponse retVal = ((RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap)(this)).findCity(inValue);
            return retVal.Body.findCityResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap.BeginfindCity(RouteTotalCalculation.Core.ServiceAddressFinder.findCityRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginfindCity(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginfindCity(RouteTotalCalculation.Core.ServiceAddressFinder.City cidade, RouteTotalCalculation.Core.ServiceAddressFinder.AddressOptions ao, string token, System.AsyncCallback callback, object asyncState) {
            RouteTotalCalculation.Core.ServiceAddressFinder.findCityRequest inValue = new RouteTotalCalculation.Core.ServiceAddressFinder.findCityRequest();
            inValue.Body = new RouteTotalCalculation.Core.ServiceAddressFinder.findCityRequestBody();
            inValue.Body.cidade = cidade;
            inValue.Body.ao = ao;
            inValue.Body.token = token;
            return ((RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap)(this)).BeginfindCity(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RouteTotalCalculation.Core.ServiceAddressFinder.findCityResponse RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap.EndfindCity(System.IAsyncResult result) {
            return base.Channel.EndfindCity(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public RouteTotalCalculation.Core.ServiceAddressFinder.CityLocationInfo EndfindCity(System.IAsyncResult result) {
            RouteTotalCalculation.Core.ServiceAddressFinder.findCityResponse retVal = ((RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap)(this)).EndfindCity(result);
            return retVal.Body.findCityResult;
        }
        
        private System.IAsyncResult OnBeginfindCity(object[] inValues, System.AsyncCallback callback, object asyncState) {
            RouteTotalCalculation.Core.ServiceAddressFinder.City cidade = ((RouteTotalCalculation.Core.ServiceAddressFinder.City)(inValues[0]));
            RouteTotalCalculation.Core.ServiceAddressFinder.AddressOptions ao = ((RouteTotalCalculation.Core.ServiceAddressFinder.AddressOptions)(inValues[1]));
            string token = ((string)(inValues[2]));
            return this.BeginfindCity(cidade, ao, token, callback, asyncState);
        }
        
        private object[] OnEndfindCity(System.IAsyncResult result) {
            RouteTotalCalculation.Core.ServiceAddressFinder.CityLocationInfo retVal = this.EndfindCity(result);
            return new object[] {
                    retVal};
        }
        
        private void OnfindCityCompleted(object state) {
            if ((this.findCityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.findCityCompleted(this, new findCityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void findCityAsync(RouteTotalCalculation.Core.ServiceAddressFinder.City cidade, RouteTotalCalculation.Core.ServiceAddressFinder.AddressOptions ao, string token) {
            this.findCityAsync(cidade, ao, token, null);
        }
        
        public void findCityAsync(RouteTotalCalculation.Core.ServiceAddressFinder.City cidade, RouteTotalCalculation.Core.ServiceAddressFinder.AddressOptions ao, string token, object userState) {
            if ((this.onBeginfindCityDelegate == null)) {
                this.onBeginfindCityDelegate = new BeginOperationDelegate(this.OnBeginfindCity);
            }
            if ((this.onEndfindCityDelegate == null)) {
                this.onEndfindCityDelegate = new EndOperationDelegate(this.OnEndfindCity);
            }
            if ((this.onfindCityCompletedDelegate == null)) {
                this.onfindCityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnfindCityCompleted);
            }
            base.InvokeAsync(this.onBeginfindCityDelegate, new object[] {
                        cidade,
                        ao,
                        token}, this.onEndfindCityDelegate, this.onfindCityCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RouteTotalCalculation.Core.ServiceAddressFinder.GetCrossStreetXYResponse RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap.GetCrossStreetXY(RouteTotalCalculation.Core.ServiceAddressFinder.GetCrossStreetXYRequest request) {
            return base.Channel.GetCrossStreetXY(request);
        }
        
        public System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceAddressFinder.CrossStreetLocation> GetCrossStreetXY(RouteTotalCalculation.Core.ServiceAddressFinder.City cidade, string firstStreet, string secondStreet, string token) {
            RouteTotalCalculation.Core.ServiceAddressFinder.GetCrossStreetXYRequest inValue = new RouteTotalCalculation.Core.ServiceAddressFinder.GetCrossStreetXYRequest();
            inValue.Body = new RouteTotalCalculation.Core.ServiceAddressFinder.GetCrossStreetXYRequestBody();
            inValue.Body.cidade = cidade;
            inValue.Body.firstStreet = firstStreet;
            inValue.Body.secondStreet = secondStreet;
            inValue.Body.token = token;
            RouteTotalCalculation.Core.ServiceAddressFinder.GetCrossStreetXYResponse retVal = ((RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap)(this)).GetCrossStreetXY(inValue);
            return retVal.Body.GetCrossStreetXYResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap.BeginGetCrossStreetXY(RouteTotalCalculation.Core.ServiceAddressFinder.GetCrossStreetXYRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCrossStreetXY(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCrossStreetXY(RouteTotalCalculation.Core.ServiceAddressFinder.City cidade, string firstStreet, string secondStreet, string token, System.AsyncCallback callback, object asyncState) {
            RouteTotalCalculation.Core.ServiceAddressFinder.GetCrossStreetXYRequest inValue = new RouteTotalCalculation.Core.ServiceAddressFinder.GetCrossStreetXYRequest();
            inValue.Body = new RouteTotalCalculation.Core.ServiceAddressFinder.GetCrossStreetXYRequestBody();
            inValue.Body.cidade = cidade;
            inValue.Body.firstStreet = firstStreet;
            inValue.Body.secondStreet = secondStreet;
            inValue.Body.token = token;
            return ((RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap)(this)).BeginGetCrossStreetXY(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RouteTotalCalculation.Core.ServiceAddressFinder.GetCrossStreetXYResponse RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap.EndGetCrossStreetXY(System.IAsyncResult result) {
            return base.Channel.EndGetCrossStreetXY(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceAddressFinder.CrossStreetLocation> EndGetCrossStreetXY(System.IAsyncResult result) {
            RouteTotalCalculation.Core.ServiceAddressFinder.GetCrossStreetXYResponse retVal = ((RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap)(this)).EndGetCrossStreetXY(result);
            return retVal.Body.GetCrossStreetXYResult;
        }
        
        private System.IAsyncResult OnBeginGetCrossStreetXY(object[] inValues, System.AsyncCallback callback, object asyncState) {
            RouteTotalCalculation.Core.ServiceAddressFinder.City cidade = ((RouteTotalCalculation.Core.ServiceAddressFinder.City)(inValues[0]));
            string firstStreet = ((string)(inValues[1]));
            string secondStreet = ((string)(inValues[2]));
            string token = ((string)(inValues[3]));
            return this.BeginGetCrossStreetXY(cidade, firstStreet, secondStreet, token, callback, asyncState);
        }
        
        private object[] OnEndGetCrossStreetXY(System.IAsyncResult result) {
            System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceAddressFinder.CrossStreetLocation> retVal = this.EndGetCrossStreetXY(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCrossStreetXYCompleted(object state) {
            if ((this.GetCrossStreetXYCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCrossStreetXYCompleted(this, new GetCrossStreetXYCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCrossStreetXYAsync(RouteTotalCalculation.Core.ServiceAddressFinder.City cidade, string firstStreet, string secondStreet, string token) {
            this.GetCrossStreetXYAsync(cidade, firstStreet, secondStreet, token, null);
        }
        
        public void GetCrossStreetXYAsync(RouteTotalCalculation.Core.ServiceAddressFinder.City cidade, string firstStreet, string secondStreet, string token, object userState) {
            if ((this.onBeginGetCrossStreetXYDelegate == null)) {
                this.onBeginGetCrossStreetXYDelegate = new BeginOperationDelegate(this.OnBeginGetCrossStreetXY);
            }
            if ((this.onEndGetCrossStreetXYDelegate == null)) {
                this.onEndGetCrossStreetXYDelegate = new EndOperationDelegate(this.OnEndGetCrossStreetXY);
            }
            if ((this.onGetCrossStreetXYCompletedDelegate == null)) {
                this.onGetCrossStreetXYCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCrossStreetXYCompleted);
            }
            base.InvokeAsync(this.onBeginGetCrossStreetXYDelegate, new object[] {
                        cidade,
                        firstStreet,
                        secondStreet,
                        token}, this.onEndGetCrossStreetXYDelegate, this.onGetCrossStreetXYCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RouteTotalCalculation.Core.ServiceAddressFinder.GetCrossStreetAddressResponse RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap.GetCrossStreetAddress(RouteTotalCalculation.Core.ServiceAddressFinder.GetCrossStreetAddressRequest request) {
            return base.Channel.GetCrossStreetAddress(request);
        }
        
        public System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceAddressFinder.AddressLocation> GetCrossStreetAddress(RouteTotalCalculation.Core.ServiceAddressFinder.Point point, string token) {
            RouteTotalCalculation.Core.ServiceAddressFinder.GetCrossStreetAddressRequest inValue = new RouteTotalCalculation.Core.ServiceAddressFinder.GetCrossStreetAddressRequest();
            inValue.Body = new RouteTotalCalculation.Core.ServiceAddressFinder.GetCrossStreetAddressRequestBody();
            inValue.Body.point = point;
            inValue.Body.token = token;
            RouteTotalCalculation.Core.ServiceAddressFinder.GetCrossStreetAddressResponse retVal = ((RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap)(this)).GetCrossStreetAddress(inValue);
            return retVal.Body.GetCrossStreetAddressResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap.BeginGetCrossStreetAddress(RouteTotalCalculation.Core.ServiceAddressFinder.GetCrossStreetAddressRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCrossStreetAddress(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCrossStreetAddress(RouteTotalCalculation.Core.ServiceAddressFinder.Point point, string token, System.AsyncCallback callback, object asyncState) {
            RouteTotalCalculation.Core.ServiceAddressFinder.GetCrossStreetAddressRequest inValue = new RouteTotalCalculation.Core.ServiceAddressFinder.GetCrossStreetAddressRequest();
            inValue.Body = new RouteTotalCalculation.Core.ServiceAddressFinder.GetCrossStreetAddressRequestBody();
            inValue.Body.point = point;
            inValue.Body.token = token;
            return ((RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap)(this)).BeginGetCrossStreetAddress(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RouteTotalCalculation.Core.ServiceAddressFinder.GetCrossStreetAddressResponse RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap.EndGetCrossStreetAddress(System.IAsyncResult result) {
            return base.Channel.EndGetCrossStreetAddress(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceAddressFinder.AddressLocation> EndGetCrossStreetAddress(System.IAsyncResult result) {
            RouteTotalCalculation.Core.ServiceAddressFinder.GetCrossStreetAddressResponse retVal = ((RouteTotalCalculation.Core.ServiceAddressFinder.AddressFinderSoap)(this)).EndGetCrossStreetAddress(result);
            return retVal.Body.GetCrossStreetAddressResult;
        }
        
        private System.IAsyncResult OnBeginGetCrossStreetAddress(object[] inValues, System.AsyncCallback callback, object asyncState) {
            RouteTotalCalculation.Core.ServiceAddressFinder.Point point = ((RouteTotalCalculation.Core.ServiceAddressFinder.Point)(inValues[0]));
            string token = ((string)(inValues[1]));
            return this.BeginGetCrossStreetAddress(point, token, callback, asyncState);
        }
        
        private object[] OnEndGetCrossStreetAddress(System.IAsyncResult result) {
            System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceAddressFinder.AddressLocation> retVal = this.EndGetCrossStreetAddress(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCrossStreetAddressCompleted(object state) {
            if ((this.GetCrossStreetAddressCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCrossStreetAddressCompleted(this, new GetCrossStreetAddressCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCrossStreetAddressAsync(RouteTotalCalculation.Core.ServiceAddressFinder.Point point, string token) {
            this.GetCrossStreetAddressAsync(point, token, null);
        }
        
        public void GetCrossStreetAddressAsync(RouteTotalCalculation.Core.ServiceAddressFinder.Point point, string token, object userState) {
            if ((this.onBeginGetCrossStreetAddressDelegate == null)) {
                this.onBeginGetCrossStreetAddressDelegate = new BeginOperationDelegate(this.OnBeginGetCrossStreetAddress);
            }
            if ((this.onEndGetCrossStreetAddressDelegate == null)) {
                this.onEndGetCrossStreetAddressDelegate = new EndOperationDelegate(this.OnEndGetCrossStreetAddress);
            }
            if ((this.onGetCrossStreetAddressCompletedDelegate == null)) {
                this.onGetCrossStreetAddressCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCrossStreetAddressCompleted);
            }
            base.InvokeAsync(this.onBeginGetCrossStreetAddressDelegate, new object[] {
                        point,
                        token}, this.onEndGetCrossStreetAddressDelegate, this.onGetCrossStreetAddressCompletedDelegate, userState);
        }
    }
}
