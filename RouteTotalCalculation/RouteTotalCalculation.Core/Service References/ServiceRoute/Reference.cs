//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RouteTotalCalculation.Core.ServiceRoute {
	[System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RouteStop", Namespace="http://webservices.maplink2.com.br")]
    [System.SerializableAttribute()]
    public partial class RouteStop : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        private RouteTotalCalculation.Core.ServiceRoute.Point pointField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public RouteTotalCalculation.Core.ServiceRoute.Point point {
            get {
                return this.pointField;
            }
            set {
                if ((object.ReferenceEquals(this.pointField, value) != true)) {
                    this.pointField = value;
                    this.RaisePropertyChanged("point");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Point", Namespace="http://webservices.maplink2.com.br")]
    [System.SerializableAttribute()]
    public partial class Point : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private double xField;
        
        private double yField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double x {
            get {
                return this.xField;
            }
            set {
                if ((this.xField.Equals(value) != true)) {
                    this.xField = value;
                    this.RaisePropertyChanged("x");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double y {
            get {
                return this.yField;
            }
            set {
                if ((this.yField.Equals(value) != true)) {
                    this.yField = value;
                    this.RaisePropertyChanged("y");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RouteOptions", Namespace="http://webservices.maplink2.com.br")]
    [System.SerializableAttribute()]
    public partial class RouteOptions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string languageField;
        
        private RouteTotalCalculation.Core.ServiceRoute.RouteDetails routeDetailsField;
        
        private RouteTotalCalculation.Core.ServiceRoute.Vehicle vehicleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteLine> routeLineField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string language {
            get {
                return this.languageField;
            }
            set {
                if ((object.ReferenceEquals(this.languageField, value) != true)) {
                    this.languageField = value;
                    this.RaisePropertyChanged("language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public RouteTotalCalculation.Core.ServiceRoute.RouteDetails routeDetails {
            get {
                return this.routeDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.routeDetailsField, value) != true)) {
                    this.routeDetailsField = value;
                    this.RaisePropertyChanged("routeDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public RouteTotalCalculation.Core.ServiceRoute.Vehicle vehicle {
            get {
                return this.vehicleField;
            }
            set {
                if ((object.ReferenceEquals(this.vehicleField, value) != true)) {
                    this.vehicleField = value;
                    this.RaisePropertyChanged("vehicle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteLine> routeLine {
            get {
                return this.routeLineField;
            }
            set {
                if ((object.ReferenceEquals(this.routeLineField, value) != true)) {
                    this.routeLineField = value;
                    this.RaisePropertyChanged("routeLine");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RouteDetails", Namespace="http://webservices.maplink2.com.br")]
    [System.SerializableAttribute()]
    public partial class RouteDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int descriptionTypeField;
        
        private int routeTypeField;
        
        private bool optimizeRouteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RouteTotalCalculation.Core.ServiceRoute.ArrayOfString poiRouteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RouteTotalCalculation.Core.ServiceRoute.ArrayOfString barriersListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.Point> barrierPointsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int descriptionType {
            get {
                return this.descriptionTypeField;
            }
            set {
                if ((this.descriptionTypeField.Equals(value) != true)) {
                    this.descriptionTypeField = value;
                    this.RaisePropertyChanged("descriptionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int routeType {
            get {
                return this.routeTypeField;
            }
            set {
                if ((this.routeTypeField.Equals(value) != true)) {
                    this.routeTypeField = value;
                    this.RaisePropertyChanged("routeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public bool optimizeRoute {
            get {
                return this.optimizeRouteField;
            }
            set {
                if ((this.optimizeRouteField.Equals(value) != true)) {
                    this.optimizeRouteField = value;
                    this.RaisePropertyChanged("optimizeRoute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public RouteTotalCalculation.Core.ServiceRoute.ArrayOfString poiRoute {
            get {
                return this.poiRouteField;
            }
            set {
                if ((object.ReferenceEquals(this.poiRouteField, value) != true)) {
                    this.poiRouteField = value;
                    this.RaisePropertyChanged("poiRoute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public RouteTotalCalculation.Core.ServiceRoute.ArrayOfString barriersList {
            get {
                return this.barriersListField;
            }
            set {
                if ((object.ReferenceEquals(this.barriersListField, value) != true)) {
                    this.barriersListField = value;
                    this.RaisePropertyChanged("barriersList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.Point> barrierPoints {
            get {
                return this.barrierPointsField;
            }
            set {
                if ((object.ReferenceEquals(this.barrierPointsField, value) != true)) {
                    this.barrierPointsField = value;
                    this.RaisePropertyChanged("barrierPoints");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Vehicle", Namespace="http://webservices.maplink2.com.br")]
    [System.SerializableAttribute()]
    public partial class Vehicle : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int tankCapacityField;
        
        private float averageConsumptionField;
        
        private double fuelPriceField;
        
        private int averageSpeedField;
        
        private int tollFeeCatField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int tankCapacity {
            get {
                return this.tankCapacityField;
            }
            set {
                if ((this.tankCapacityField.Equals(value) != true)) {
                    this.tankCapacityField = value;
                    this.RaisePropertyChanged("tankCapacity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public float averageConsumption {
            get {
                return this.averageConsumptionField;
            }
            set {
                if ((this.averageConsumptionField.Equals(value) != true)) {
                    this.averageConsumptionField = value;
                    this.RaisePropertyChanged("averageConsumption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public double fuelPrice {
            get {
                return this.fuelPriceField;
            }
            set {
                if ((this.fuelPriceField.Equals(value) != true)) {
                    this.fuelPriceField = value;
                    this.RaisePropertyChanged("fuelPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public int averageSpeed {
            get {
                return this.averageSpeedField;
            }
            set {
                if ((this.averageSpeedField.Equals(value) != true)) {
                    this.averageSpeedField = value;
                    this.RaisePropertyChanged("averageSpeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public int tollFeeCat {
            get {
                return this.tollFeeCatField;
            }
            set {
                if ((this.tollFeeCatField.Equals(value) != true)) {
                    this.tollFeeCatField = value;
                    this.RaisePropertyChanged("tollFeeCat");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RouteLine", Namespace="http://webservices.maplink2.com.br")]
    [System.SerializableAttribute()]
    public partial class RouteLine : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int widthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RGBField;
        
        private double transparencyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int width {
            get {
                return this.widthField;
            }
            set {
                if ((this.widthField.Equals(value) != true)) {
                    this.widthField = value;
                    this.RaisePropertyChanged("width");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string RGB {
            get {
                return this.RGBField;
            }
            set {
                if ((object.ReferenceEquals(this.RGBField, value) != true)) {
                    this.RGBField = value;
                    this.RaisePropertyChanged("RGB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public double transparency {
            get {
                return this.transparencyField;
            }
            set {
                if ((this.transparencyField.Equals(value) != true)) {
                    this.transparencyField = value;
                    this.RaisePropertyChanged("transparency");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArrayOfString", Namespace="http://webservices.maplink2.com.br", ItemName="string")]
    [System.SerializableAttribute()]
    public class ArrayOfString : System.Collections.Generic.List<string> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RouteTotals", Namespace="http://webservices.maplink2.com.br")]
    [System.SerializableAttribute()]
    public partial class RouteTotals : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private double totalDistanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string totalTimeField;
        
        private double totalFuelUsedField;
        
        private double totaltollFeeCostField;
        
        private double totalfuelCostField;
        
        private double totalCostField;
        
        private double taxiFare1Field;
        
        private double taxiFare2Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double totalDistance {
            get {
                return this.totalDistanceField;
            }
            set {
                if ((this.totalDistanceField.Equals(value) != true)) {
                    this.totalDistanceField = value;
                    this.RaisePropertyChanged("totalDistance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string totalTime {
            get {
                return this.totalTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.totalTimeField, value) != true)) {
                    this.totalTimeField = value;
                    this.RaisePropertyChanged("totalTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public double totalFuelUsed {
            get {
                return this.totalFuelUsedField;
            }
            set {
                if ((this.totalFuelUsedField.Equals(value) != true)) {
                    this.totalFuelUsedField = value;
                    this.RaisePropertyChanged("totalFuelUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public double totaltollFeeCost {
            get {
                return this.totaltollFeeCostField;
            }
            set {
                if ((this.totaltollFeeCostField.Equals(value) != true)) {
                    this.totaltollFeeCostField = value;
                    this.RaisePropertyChanged("totaltollFeeCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public double totalfuelCost {
            get {
                return this.totalfuelCostField;
            }
            set {
                if ((this.totalfuelCostField.Equals(value) != true)) {
                    this.totalfuelCostField = value;
                    this.RaisePropertyChanged("totalfuelCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public double totalCost {
            get {
                return this.totalCostField;
            }
            set {
                if ((this.totalCostField.Equals(value) != true)) {
                    this.totalCostField = value;
                    this.RaisePropertyChanged("totalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public double taxiFare1 {
            get {
                return this.taxiFare1Field;
            }
            set {
                if ((this.taxiFare1Field.Equals(value) != true)) {
                    this.taxiFare1Field = value;
                    this.RaisePropertyChanged("taxiFare1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public double taxiFare2 {
            get {
                return this.taxiFare2Field;
            }
            set {
                if ((this.taxiFare2Field.Equals(value) != true)) {
                    this.taxiFare2Field = value;
                    this.RaisePropertyChanged("taxiFare2");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RouteArray", Namespace="http://webservices.maplink2.com.br")]
    [System.SerializableAttribute()]
    public partial class RouteArray : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private RouteTotalCalculation.Core.ServiceRoute.RouteStop OriginField;
        
        private RouteTotalCalculation.Core.ServiceRoute.RouteStop DestField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public RouteTotalCalculation.Core.ServiceRoute.RouteStop Origin {
            get {
                return this.OriginField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginField, value) != true)) {
                    this.OriginField = value;
                    this.RaisePropertyChanged("Origin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false, Order=1)]
        public RouteTotalCalculation.Core.ServiceRoute.RouteStop Dest {
            get {
                return this.DestField;
            }
            set {
                if ((object.ReferenceEquals(this.DestField, value) != true)) {
                    this.DestField = value;
                    this.RaisePropertyChanged("Dest");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlternativeRouteInfo", Namespace="http://webservices.maplink2.com.br")]
    [System.SerializableAttribute()]
    public partial class AlternativeRouteInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private RouteTotalCalculation.Core.ServiceRoute.RouteInfo mainRouteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteInfo> alternativesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public RouteTotalCalculation.Core.ServiceRoute.RouteInfo mainRoute {
            get {
                return this.mainRouteField;
            }
            set {
                if ((object.ReferenceEquals(this.mainRouteField, value) != true)) {
                    this.mainRouteField = value;
                    this.RaisePropertyChanged("mainRoute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteInfo> alternatives {
            get {
                return this.alternativesField;
            }
            set {
                if ((object.ReferenceEquals(this.alternativesField, value) != true)) {
                    this.alternativesField = value;
                    this.RaisePropertyChanged("alternatives");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RouteInfo", Namespace="http://webservices.maplink2.com.br")]
    [System.SerializableAttribute()]
    public partial class RouteInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string routeIdField;
        
        private RouteTotalCalculation.Core.ServiceRoute.MapInfo MapInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.SegmentDescription> segDescriptionField;
        
        private RouteTotalCalculation.Core.ServiceRoute.RouteTotals routeTotalsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteSummary> routeSummaryField;
        
        private RouteTotalCalculation.Core.ServiceRoute.RoadType roadTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string routeId {
            get {
                return this.routeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.routeIdField, value) != true)) {
                    this.routeIdField = value;
                    this.RaisePropertyChanged("routeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false, Order=1)]
        public RouteTotalCalculation.Core.ServiceRoute.MapInfo MapInfo {
            get {
                return this.MapInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.MapInfoField, value) != true)) {
                    this.MapInfoField = value;
                    this.RaisePropertyChanged("MapInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.SegmentDescription> segDescription {
            get {
                return this.segDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.segDescriptionField, value) != true)) {
                    this.segDescriptionField = value;
                    this.RaisePropertyChanged("segDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false, Order=3)]
        public RouteTotalCalculation.Core.ServiceRoute.RouteTotals routeTotals {
            get {
                return this.routeTotalsField;
            }
            set {
                if ((object.ReferenceEquals(this.routeTotalsField, value) != true)) {
                    this.routeTotalsField = value;
                    this.RaisePropertyChanged("routeTotals");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteSummary> routeSummary {
            get {
                return this.routeSummaryField;
            }
            set {
                if ((object.ReferenceEquals(this.routeSummaryField, value) != true)) {
                    this.routeSummaryField = value;
                    this.RaisePropertyChanged("routeSummary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false, Order=5)]
        public RouteTotalCalculation.Core.ServiceRoute.RoadType roadType {
            get {
                return this.roadTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.roadTypeField, value) != true)) {
                    this.roadTypeField = value;
                    this.RaisePropertyChanged("roadType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MapInfo", Namespace="http://webservices.maplink2.com.br")]
    [System.SerializableAttribute()]
    public partial class MapInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string urlField;
        
        private RouteTotalCalculation.Core.ServiceRoute.Extent extentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string url {
            get {
                return this.urlField;
            }
            set {
                if ((object.ReferenceEquals(this.urlField, value) != true)) {
                    this.urlField = value;
                    this.RaisePropertyChanged("url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false, Order=1)]
        public RouteTotalCalculation.Core.ServiceRoute.Extent extent {
            get {
                return this.extentField;
            }
            set {
                if ((object.ReferenceEquals(this.extentField, value) != true)) {
                    this.extentField = value;
                    this.RaisePropertyChanged("extent");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoadType", Namespace="http://webservices.maplink2.com.br")]
    [System.SerializableAttribute()]
    public partial class RoadType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private double twoLaneHighwayField;
        
        private double secondLaneUnderConstructionField;
        
        private double oneLaneRoadwayField;
        
        private double pavingWorkInProgressField;
        
        private double dirtRoadField;
        
        private double roadwayInPoorConditionsField;
        
        private double ferryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double twoLaneHighway {
            get {
                return this.twoLaneHighwayField;
            }
            set {
                if ((this.twoLaneHighwayField.Equals(value) != true)) {
                    this.twoLaneHighwayField = value;
                    this.RaisePropertyChanged("twoLaneHighway");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public double secondLaneUnderConstruction {
            get {
                return this.secondLaneUnderConstructionField;
            }
            set {
                if ((this.secondLaneUnderConstructionField.Equals(value) != true)) {
                    this.secondLaneUnderConstructionField = value;
                    this.RaisePropertyChanged("secondLaneUnderConstruction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public double oneLaneRoadway {
            get {
                return this.oneLaneRoadwayField;
            }
            set {
                if ((this.oneLaneRoadwayField.Equals(value) != true)) {
                    this.oneLaneRoadwayField = value;
                    this.RaisePropertyChanged("oneLaneRoadway");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public double pavingWorkInProgress {
            get {
                return this.pavingWorkInProgressField;
            }
            set {
                if ((this.pavingWorkInProgressField.Equals(value) != true)) {
                    this.pavingWorkInProgressField = value;
                    this.RaisePropertyChanged("pavingWorkInProgress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public double dirtRoad {
            get {
                return this.dirtRoadField;
            }
            set {
                if ((this.dirtRoadField.Equals(value) != true)) {
                    this.dirtRoadField = value;
                    this.RaisePropertyChanged("dirtRoad");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public double roadwayInPoorConditions {
            get {
                return this.roadwayInPoorConditionsField;
            }
            set {
                if ((this.roadwayInPoorConditionsField.Equals(value) != true)) {
                    this.roadwayInPoorConditionsField = value;
                    this.RaisePropertyChanged("roadwayInPoorConditions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public double ferry {
            get {
                return this.ferryField;
            }
            set {
                if ((this.ferryField.Equals(value) != true)) {
                    this.ferryField = value;
                    this.RaisePropertyChanged("ferry");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SegmentDescription", Namespace="http://webservices.maplink2.com.br")]
    [System.SerializableAttribute()]
    public partial class SegmentDescription : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string commandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string poiRouteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.POIDetails> poiRouteDetailsField;
        
        private RouteTotalCalculation.Core.ServiceRoute.City cityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string tollFeeField;
        
        private RouteTotalCalculation.Core.ServiceRoute.TollFeeDetails tollFeeDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string roadTypeField;
        
        private double distanceField;
        
        private double cumulativeDistanceField;
        
        private RouteTotalCalculation.Core.ServiceRoute.Point pointField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string command {
            get {
                return this.commandField;
            }
            set {
                if ((object.ReferenceEquals(this.commandField, value) != true)) {
                    this.commandField = value;
                    this.RaisePropertyChanged("command");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string poiRoute {
            get {
                return this.poiRouteField;
            }
            set {
                if ((object.ReferenceEquals(this.poiRouteField, value) != true)) {
                    this.poiRouteField = value;
                    this.RaisePropertyChanged("poiRoute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.POIDetails> poiRouteDetails {
            get {
                return this.poiRouteDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.poiRouteDetailsField, value) != true)) {
                    this.poiRouteDetailsField = value;
                    this.RaisePropertyChanged("poiRouteDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false, Order=4)]
        public RouteTotalCalculation.Core.ServiceRoute.City city {
            get {
                return this.cityField;
            }
            set {
                if ((object.ReferenceEquals(this.cityField, value) != true)) {
                    this.cityField = value;
                    this.RaisePropertyChanged("city");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string tollFee {
            get {
                return this.tollFeeField;
            }
            set {
                if ((object.ReferenceEquals(this.tollFeeField, value) != true)) {
                    this.tollFeeField = value;
                    this.RaisePropertyChanged("tollFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false, Order=6)]
        public RouteTotalCalculation.Core.ServiceRoute.TollFeeDetails tollFeeDetails {
            get {
                return this.tollFeeDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.tollFeeDetailsField, value) != true)) {
                    this.tollFeeDetailsField = value;
                    this.RaisePropertyChanged("tollFeeDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string roadType {
            get {
                return this.roadTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.roadTypeField, value) != true)) {
                    this.roadTypeField = value;
                    this.RaisePropertyChanged("roadType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=8)]
        public double distance {
            get {
                return this.distanceField;
            }
            set {
                if ((this.distanceField.Equals(value) != true)) {
                    this.distanceField = value;
                    this.RaisePropertyChanged("distance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=9)]
        public double cumulativeDistance {
            get {
                return this.cumulativeDistanceField;
            }
            set {
                if ((this.cumulativeDistanceField.Equals(value) != true)) {
                    this.cumulativeDistanceField = value;
                    this.RaisePropertyChanged("cumulativeDistance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false, Order=10)]
        public RouteTotalCalculation.Core.ServiceRoute.Point point {
            get {
                return this.pointField;
            }
            set {
                if ((object.ReferenceEquals(this.pointField, value) != true)) {
                    this.pointField = value;
                    this.RaisePropertyChanged("point");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RouteSummary", Namespace="http://webservices.maplink2.com.br")]
    [System.SerializableAttribute()]
    public partial class RouteSummary : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        private double distanceField;
        
        private RouteTotalCalculation.Core.ServiceRoute.Point pointField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double distance {
            get {
                return this.distanceField;
            }
            set {
                if ((this.distanceField.Equals(value) != true)) {
                    this.distanceField = value;
                    this.RaisePropertyChanged("distance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public RouteTotalCalculation.Core.ServiceRoute.Point point {
            get {
                return this.pointField;
            }
            set {
                if ((object.ReferenceEquals(this.pointField, value) != true)) {
                    this.pointField = value;
                    this.RaisePropertyChanged("point");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Extent", Namespace="http://webservices.maplink2.com.br")]
    [System.SerializableAttribute()]
    public partial class Extent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private double XMinField;
        
        private double YMinField;
        
        private double XMaxField;
        
        private double YMaxField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double XMin {
            get {
                return this.XMinField;
            }
            set {
                if ((this.XMinField.Equals(value) != true)) {
                    this.XMinField = value;
                    this.RaisePropertyChanged("XMin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double YMin {
            get {
                return this.YMinField;
            }
            set {
                if ((this.YMinField.Equals(value) != true)) {
                    this.YMinField = value;
                    this.RaisePropertyChanged("YMin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public double XMax {
            get {
                return this.XMaxField;
            }
            set {
                if ((this.XMaxField.Equals(value) != true)) {
                    this.XMaxField = value;
                    this.RaisePropertyChanged("XMax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public double YMax {
            get {
                return this.YMaxField;
            }
            set {
                if ((this.YMaxField.Equals(value) != true)) {
                    this.YMaxField = value;
                    this.RaisePropertyChanged("YMax");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="City", Namespace="http://webservices.maplink2.com.br")]
    [System.SerializableAttribute()]
    public partial class City : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string stateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string state {
            get {
                return this.stateField;
            }
            set {
                if ((object.ReferenceEquals(this.stateField, value) != true)) {
                    this.stateField = value;
                    this.RaisePropertyChanged("state");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TollFeeDetails", Namespace="http://webservices.maplink2.com.br")]
    [System.SerializableAttribute()]
    public partial class TollFeeDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string directionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string addressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string concessionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string phoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string stateField;
        
        private double priceField;
        
        private double pricePerAxleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string direction {
            get {
                return this.directionField;
            }
            set {
                if ((object.ReferenceEquals(this.directionField, value) != true)) {
                    this.directionField = value;
                    this.RaisePropertyChanged("direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string address {
            get {
                return this.addressField;
            }
            set {
                if ((object.ReferenceEquals(this.addressField, value) != true)) {
                    this.addressField = value;
                    this.RaisePropertyChanged("address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string concession {
            get {
                return this.concessionField;
            }
            set {
                if ((object.ReferenceEquals(this.concessionField, value) != true)) {
                    this.concessionField = value;
                    this.RaisePropertyChanged("concession");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                if ((object.ReferenceEquals(this.phoneField, value) != true)) {
                    this.phoneField = value;
                    this.RaisePropertyChanged("phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string state {
            get {
                return this.stateField;
            }
            set {
                if ((object.ReferenceEquals(this.stateField, value) != true)) {
                    this.stateField = value;
                    this.RaisePropertyChanged("state");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public double price {
            get {
                return this.priceField;
            }
            set {
                if ((this.priceField.Equals(value) != true)) {
                    this.priceField = value;
                    this.RaisePropertyChanged("price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public double pricePerAxle {
            get {
                return this.pricePerAxleField;
            }
            set {
                if ((this.pricePerAxleField.Equals(value) != true)) {
                    this.pricePerAxleField = value;
                    this.RaisePropertyChanged("pricePerAxle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="POIDetails", Namespace="http://webservices.maplink2.com.br")]
    [System.SerializableAttribute()]
    public partial class POIDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string clientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string addressInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sourceField;
        
        private RouteTotalCalculation.Core.ServiceRoute.Point pointField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string clientID {
            get {
                return this.clientIDField;
            }
            set {
                if ((object.ReferenceEquals(this.clientIDField, value) != true)) {
                    this.clientIDField = value;
                    this.RaisePropertyChanged("clientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string addressInfo {
            get {
                return this.addressInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.addressInfoField, value) != true)) {
                    this.addressInfoField = value;
                    this.RaisePropertyChanged("addressInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string source {
            get {
                return this.sourceField;
            }
            set {
                if ((object.ReferenceEquals(this.sourceField, value) != true)) {
                    this.sourceField = value;
                    this.RaisePropertyChanged("source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false, Order=4)]
        public RouteTotalCalculation.Core.ServiceRoute.Point point {
            get {
                return this.pointField;
            }
            set {
                if ((object.ReferenceEquals(this.pointField, value) != true)) {
                    this.pointField = value;
                    this.RaisePropertyChanged("point");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiRouteRequest", Namespace="http://webservices.maplink2.com.br")]
    [System.SerializableAttribute()]
    public partial class MultiRouteRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private RouteTotalCalculation.Core.ServiceRoute.RouteStop originField;
        
        private RouteTotalCalculation.Core.ServiceRoute.RouteStop destinationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public RouteTotalCalculation.Core.ServiceRoute.RouteStop origin {
            get {
                return this.originField;
            }
            set {
                if ((object.ReferenceEquals(this.originField, value) != true)) {
                    this.originField = value;
                    this.RaisePropertyChanged("origin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false, Order=1)]
        public RouteTotalCalculation.Core.ServiceRoute.RouteStop destination {
            get {
                return this.destinationField;
            }
            set {
                if ((object.ReferenceEquals(this.destinationField, value) != true)) {
                    this.destinationField = value;
                    this.RaisePropertyChanged("destination");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiRoute", Namespace="http://webservices.maplink2.com.br")]
    [System.SerializableAttribute()]
    public partial class MultiRoute : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.SingleRouteTotals> singleRouteTotalsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.SingleRouteTotals> singleRouteTotals {
            get {
                return this.singleRouteTotalsField;
            }
            set {
                if ((object.ReferenceEquals(this.singleRouteTotalsField, value) != true)) {
                    this.singleRouteTotalsField = value;
                    this.RaisePropertyChanged("singleRouteTotals");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleRouteTotals", Namespace="http://webservices.maplink2.com.br")]
    [System.SerializableAttribute()]
    public partial class SingleRouteTotals : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private RouteTotalCalculation.Core.ServiceRoute.RouteStop originField;
        
        private RouteTotalCalculation.Core.ServiceRoute.RouteStop destinField;
        
        private RouteTotalCalculation.Core.ServiceRoute.RouteTotals routeTotalsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string logRouteIdField;
        
        private RouteTotalCalculation.Core.ServiceRoute.MapInfo mapInfoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public RouteTotalCalculation.Core.ServiceRoute.RouteStop origin {
            get {
                return this.originField;
            }
            set {
                if ((object.ReferenceEquals(this.originField, value) != true)) {
                    this.originField = value;
                    this.RaisePropertyChanged("origin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false, Order=1)]
        public RouteTotalCalculation.Core.ServiceRoute.RouteStop destin {
            get {
                return this.destinField;
            }
            set {
                if ((object.ReferenceEquals(this.destinField, value) != true)) {
                    this.destinField = value;
                    this.RaisePropertyChanged("destin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false, Order=2)]
        public RouteTotalCalculation.Core.ServiceRoute.RouteTotals routeTotals {
            get {
                return this.routeTotalsField;
            }
            set {
                if ((object.ReferenceEquals(this.routeTotalsField, value) != true)) {
                    this.routeTotalsField = value;
                    this.RaisePropertyChanged("routeTotals");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string logRouteId {
            get {
                return this.logRouteIdField;
            }
            set {
                if ((object.ReferenceEquals(this.logRouteIdField, value) != true)) {
                    this.logRouteIdField = value;
                    this.RaisePropertyChanged("logRouteId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false, Order=4)]
        public RouteTotalCalculation.Core.ServiceRoute.MapInfo mapInfo {
            get {
                return this.mapInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.mapInfoField, value) != true)) {
                    this.mapInfoField = value;
                    this.RaisePropertyChanged("mapInfo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MapOptions", Namespace="http://webservices.maplink2.com.br")]
    [System.SerializableAttribute()]
    public partial class MapOptions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private bool scaleBarField;
        
        private RouteTotalCalculation.Core.ServiceRoute.MapSize mapSizeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool scaleBar {
            get {
                return this.scaleBarField;
            }
            set {
                if ((this.scaleBarField.Equals(value) != true)) {
                    this.scaleBarField = value;
                    this.RaisePropertyChanged("scaleBar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false, Order=1)]
        public RouteTotalCalculation.Core.ServiceRoute.MapSize mapSize {
            get {
                return this.mapSizeField;
            }
            set {
                if ((object.ReferenceEquals(this.mapSizeField, value) != true)) {
                    this.mapSizeField = value;
                    this.RaisePropertyChanged("mapSize");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MapSize", Namespace="http://webservices.maplink2.com.br")]
    [System.SerializableAttribute()]
    public partial class MapSize : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int widthField;
        
        private int heightField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int width {
            get {
                return this.widthField;
            }
            set {
                if ((this.widthField.Equals(value) != true)) {
                    this.widthField = value;
                    this.RaisePropertyChanged("width");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public int height {
            get {
                return this.heightField;
            }
            set {
                if ((this.heightField.Equals(value) != true)) {
                    this.heightField = value;
                    this.RaisePropertyChanged("height");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://webservices.maplink2.com.br", ConfigurationName="ServiceRoute.RouteSoap")]
    public interface RouteSoap {
        
        // CODEGEN: Generating message contract since element name rs from namespace http://webservices.maplink2.com.br is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://webservices.maplink2.com.br/getRouteTotals", ReplyAction="*")]
        RouteTotalCalculation.Core.ServiceRoute.getRouteTotalsResponse getRouteTotals(RouteTotalCalculation.Core.ServiceRoute.getRouteTotalsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://webservices.maplink2.com.br/getRouteTotals", ReplyAction="*")]
        System.IAsyncResult BegingetRouteTotals(RouteTotalCalculation.Core.ServiceRoute.getRouteTotalsRequest request, System.AsyncCallback callback, object asyncState);
        
        RouteTotalCalculation.Core.ServiceRoute.getRouteTotalsResponse EndgetRouteTotals(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since element name ra from namespace http://webservices.maplink2.com.br is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://webservices.maplink2.com.br/GetRouteTotalsBatch", ReplyAction="*")]
        RouteTotalCalculation.Core.ServiceRoute.GetRouteTotalsBatchResponse GetRouteTotalsBatch(RouteTotalCalculation.Core.ServiceRoute.GetRouteTotalsBatchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://webservices.maplink2.com.br/GetRouteTotalsBatch", ReplyAction="*")]
        System.IAsyncResult BeginGetRouteTotalsBatch(RouteTotalCalculation.Core.ServiceRoute.GetRouteTotalsBatchRequest request, System.AsyncCallback callback, object asyncState);
        
        RouteTotalCalculation.Core.ServiceRoute.GetRouteTotalsBatchResponse EndGetRouteTotalsBatch(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since element name rs from namespace http://webservices.maplink2.com.br is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://webservices.maplink2.com.br/getRouteWithAlternatives", ReplyAction="*")]
        RouteTotalCalculation.Core.ServiceRoute.getRouteWithAlternativesResponse getRouteWithAlternatives(RouteTotalCalculation.Core.ServiceRoute.getRouteWithAlternativesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://webservices.maplink2.com.br/getRouteWithAlternatives", ReplyAction="*")]
        System.IAsyncResult BegingetRouteWithAlternatives(RouteTotalCalculation.Core.ServiceRoute.getRouteWithAlternativesRequest request, System.AsyncCallback callback, object asyncState);
        
        RouteTotalCalculation.Core.ServiceRoute.getRouteWithAlternativesResponse EndgetRouteWithAlternatives(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since element name request from namespace http://webservices.maplink2.com.br is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://webservices.maplink2.com.br/getMultiRoute", ReplyAction="*")]
        RouteTotalCalculation.Core.ServiceRoute.getMultiRouteResponse getMultiRoute(RouteTotalCalculation.Core.ServiceRoute.getMultiRouteRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://webservices.maplink2.com.br/getMultiRoute", ReplyAction="*")]
        System.IAsyncResult BegingetMultiRoute(RouteTotalCalculation.Core.ServiceRoute.getMultiRouteRequest request, System.AsyncCallback callback, object asyncState);
        
        RouteTotalCalculation.Core.ServiceRoute.getMultiRouteResponse EndgetMultiRoute(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since element name rs from namespace http://webservices.maplink2.com.br is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://webservices.maplink2.com.br/getRoute", ReplyAction="*")]
        RouteTotalCalculation.Core.ServiceRoute.getRouteResponse getRoute(RouteTotalCalculation.Core.ServiceRoute.getRouteRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://webservices.maplink2.com.br/getRoute", ReplyAction="*")]
        System.IAsyncResult BegingetRoute(RouteTotalCalculation.Core.ServiceRoute.getRouteRequest request, System.AsyncCallback callback, object asyncState);
        
        RouteTotalCalculation.Core.ServiceRoute.getRouteResponse EndgetRoute(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since element name rs from namespace http://webservices.maplink2.com.br is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://webservices.maplink2.com.br/getRouteSummary", ReplyAction="*")]
        RouteTotalCalculation.Core.ServiceRoute.getRouteSummaryResponse getRouteSummary(RouteTotalCalculation.Core.ServiceRoute.getRouteSummaryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://webservices.maplink2.com.br/getRouteSummary", ReplyAction="*")]
        System.IAsyncResult BegingetRouteSummary(RouteTotalCalculation.Core.ServiceRoute.getRouteSummaryRequest request, System.AsyncCallback callback, object asyncState);
        
        RouteTotalCalculation.Core.ServiceRoute.getRouteSummaryResponse EndgetRouteSummary(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since element name rs from namespace http://webservices.maplink2.com.br is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://webservices.maplink2.com.br/getRouteDescription", ReplyAction="*")]
        RouteTotalCalculation.Core.ServiceRoute.getRouteDescriptionResponse getRouteDescription(RouteTotalCalculation.Core.ServiceRoute.getRouteDescriptionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://webservices.maplink2.com.br/getRouteDescription", ReplyAction="*")]
        System.IAsyncResult BegingetRouteDescription(RouteTotalCalculation.Core.ServiceRoute.getRouteDescriptionRequest request, System.AsyncCallback callback, object asyncState);
        
        RouteTotalCalculation.Core.ServiceRoute.getRouteDescriptionResponse EndgetRouteDescription(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since element name rs from namespace http://webservices.maplink2.com.br is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://webservices.maplink2.com.br/getRouteWithMap", ReplyAction="*")]
        RouteTotalCalculation.Core.ServiceRoute.getRouteWithMapResponse getRouteWithMap(RouteTotalCalculation.Core.ServiceRoute.getRouteWithMapRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://webservices.maplink2.com.br/getRouteWithMap", ReplyAction="*")]
        System.IAsyncResult BegingetRouteWithMap(RouteTotalCalculation.Core.ServiceRoute.getRouteWithMapRequest request, System.AsyncCallback callback, object asyncState);
        
        RouteTotalCalculation.Core.ServiceRoute.getRouteWithMapResponse EndgetRouteWithMap(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getRouteTotalsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getRouteTotals", Namespace="http://webservices.maplink2.com.br", Order=0)]
        public RouteTotalCalculation.Core.ServiceRoute.getRouteTotalsRequestBody Body;
        
        public getRouteTotalsRequest() {
        }
        
        public getRouteTotalsRequest(RouteTotalCalculation.Core.ServiceRoute.getRouteTotalsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://webservices.maplink2.com.br")]
    public partial class getRouteTotalsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop> rs;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string token;
        
        public getRouteTotalsRequestBody() {
        }
        
        public getRouteTotalsRequestBody(System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop> rs, RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro, string token) {
            this.rs = rs;
            this.ro = ro;
            this.token = token;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getRouteTotalsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getRouteTotalsResponse", Namespace="http://webservices.maplink2.com.br", Order=0)]
        public RouteTotalCalculation.Core.ServiceRoute.getRouteTotalsResponseBody Body;
        
        public getRouteTotalsResponse() {
        }
        
        public getRouteTotalsResponse(RouteTotalCalculation.Core.ServiceRoute.getRouteTotalsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://webservices.maplink2.com.br")]
    public partial class getRouteTotalsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public RouteTotalCalculation.Core.ServiceRoute.RouteTotals getRouteTotalsResult;
        
        public getRouteTotalsResponseBody() {
        }
        
        public getRouteTotalsResponseBody(RouteTotalCalculation.Core.ServiceRoute.RouteTotals getRouteTotalsResult) {
            this.getRouteTotalsResult = getRouteTotalsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetRouteTotalsBatchRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetRouteTotalsBatch", Namespace="http://webservices.maplink2.com.br", Order=0)]
        public RouteTotalCalculation.Core.ServiceRoute.GetRouteTotalsBatchRequestBody Body;
        
        public GetRouteTotalsBatchRequest() {
        }
        
        public GetRouteTotalsBatchRequest(RouteTotalCalculation.Core.ServiceRoute.GetRouteTotalsBatchRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://webservices.maplink2.com.br")]
    public partial class GetRouteTotalsBatchRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteArray> ra;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string token;
        
        public GetRouteTotalsBatchRequestBody() {
        }
        
        public GetRouteTotalsBatchRequestBody(System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteArray> ra, RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro, string token) {
            this.ra = ra;
            this.ro = ro;
            this.token = token;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetRouteTotalsBatchResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetRouteTotalsBatchResponse", Namespace="http://webservices.maplink2.com.br", Order=0)]
        public RouteTotalCalculation.Core.ServiceRoute.GetRouteTotalsBatchResponseBody Body;
        
        public GetRouteTotalsBatchResponse() {
        }
        
        public GetRouteTotalsBatchResponse(RouteTotalCalculation.Core.ServiceRoute.GetRouteTotalsBatchResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://webservices.maplink2.com.br")]
    public partial class GetRouteTotalsBatchResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteTotals> GetRouteTotalsBatchResult;
        
        public GetRouteTotalsBatchResponseBody() {
        }
        
        public GetRouteTotalsBatchResponseBody(System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteTotals> GetRouteTotalsBatchResult) {
            this.GetRouteTotalsBatchResult = GetRouteTotalsBatchResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getRouteWithAlternativesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getRouteWithAlternatives", Namespace="http://webservices.maplink2.com.br", Order=0)]
        public RouteTotalCalculation.Core.ServiceRoute.getRouteWithAlternativesRequestBody Body;
        
        public getRouteWithAlternativesRequest() {
        }
        
        public getRouteWithAlternativesRequest(RouteTotalCalculation.Core.ServiceRoute.getRouteWithAlternativesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://webservices.maplink2.com.br")]
    public partial class getRouteWithAlternativesRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop> rs;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string token;
        
        public getRouteWithAlternativesRequestBody() {
        }
        
        public getRouteWithAlternativesRequestBody(System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop> rs, RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro, string token) {
            this.rs = rs;
            this.ro = ro;
            this.token = token;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getRouteWithAlternativesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getRouteWithAlternativesResponse", Namespace="http://webservices.maplink2.com.br", Order=0)]
        public RouteTotalCalculation.Core.ServiceRoute.getRouteWithAlternativesResponseBody Body;
        
        public getRouteWithAlternativesResponse() {
        }
        
        public getRouteWithAlternativesResponse(RouteTotalCalculation.Core.ServiceRoute.getRouteWithAlternativesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://webservices.maplink2.com.br")]
    public partial class getRouteWithAlternativesResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public RouteTotalCalculation.Core.ServiceRoute.AlternativeRouteInfo getRouteWithAlternativesResult;
        
        public getRouteWithAlternativesResponseBody() {
        }
        
        public getRouteWithAlternativesResponseBody(RouteTotalCalculation.Core.ServiceRoute.AlternativeRouteInfo getRouteWithAlternativesResult) {
            this.getRouteWithAlternativesResult = getRouteWithAlternativesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getMultiRouteRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getMultiRoute", Namespace="http://webservices.maplink2.com.br", Order=0)]
        public RouteTotalCalculation.Core.ServiceRoute.getMultiRouteRequestBody Body;
        
        public getMultiRouteRequest() {
        }
        
        public getMultiRouteRequest(RouteTotalCalculation.Core.ServiceRoute.getMultiRouteRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://webservices.maplink2.com.br")]
    public partial class getMultiRouteRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.MultiRouteRequest> request;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string token;
        
        public getMultiRouteRequestBody() {
        }
        
        public getMultiRouteRequestBody(System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.MultiRouteRequest> request, RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro, string token) {
            this.request = request;
            this.ro = ro;
            this.token = token;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getMultiRouteResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getMultiRouteResponse", Namespace="http://webservices.maplink2.com.br", Order=0)]
        public RouteTotalCalculation.Core.ServiceRoute.getMultiRouteResponseBody Body;
        
        public getMultiRouteResponse() {
        }
        
        public getMultiRouteResponse(RouteTotalCalculation.Core.ServiceRoute.getMultiRouteResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://webservices.maplink2.com.br")]
    public partial class getMultiRouteResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public RouteTotalCalculation.Core.ServiceRoute.MultiRoute getMultiRouteResult;
        
        public getMultiRouteResponseBody() {
        }
        
        public getMultiRouteResponseBody(RouteTotalCalculation.Core.ServiceRoute.MultiRoute getMultiRouteResult) {
            this.getMultiRouteResult = getMultiRouteResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getRouteRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getRoute", Namespace="http://webservices.maplink2.com.br", Order=0)]
        public RouteTotalCalculation.Core.ServiceRoute.getRouteRequestBody Body;
        
        public getRouteRequest() {
        }
        
        public getRouteRequest(RouteTotalCalculation.Core.ServiceRoute.getRouteRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://webservices.maplink2.com.br")]
    public partial class getRouteRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop> rs;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string token;
        
        public getRouteRequestBody() {
        }
        
        public getRouteRequestBody(System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop> rs, RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro, string token) {
            this.rs = rs;
            this.ro = ro;
            this.token = token;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getRouteResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getRouteResponse", Namespace="http://webservices.maplink2.com.br", Order=0)]
        public RouteTotalCalculation.Core.ServiceRoute.getRouteResponseBody Body;
        
        public getRouteResponse() {
        }
        
        public getRouteResponse(RouteTotalCalculation.Core.ServiceRoute.getRouteResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://webservices.maplink2.com.br")]
    public partial class getRouteResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public RouteTotalCalculation.Core.ServiceRoute.RouteInfo getRouteResult;
        
        public getRouteResponseBody() {
        }
        
        public getRouteResponseBody(RouteTotalCalculation.Core.ServiceRoute.RouteInfo getRouteResult) {
            this.getRouteResult = getRouteResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getRouteSummaryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getRouteSummary", Namespace="http://webservices.maplink2.com.br", Order=0)]
        public RouteTotalCalculation.Core.ServiceRoute.getRouteSummaryRequestBody Body;
        
        public getRouteSummaryRequest() {
        }
        
        public getRouteSummaryRequest(RouteTotalCalculation.Core.ServiceRoute.getRouteSummaryRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://webservices.maplink2.com.br")]
    public partial class getRouteSummaryRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop> rs;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string token;
        
        public getRouteSummaryRequestBody() {
        }
        
        public getRouteSummaryRequestBody(System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop> rs, RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro, string token) {
            this.rs = rs;
            this.ro = ro;
            this.token = token;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getRouteSummaryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getRouteSummaryResponse", Namespace="http://webservices.maplink2.com.br", Order=0)]
        public RouteTotalCalculation.Core.ServiceRoute.getRouteSummaryResponseBody Body;
        
        public getRouteSummaryResponse() {
        }
        
        public getRouteSummaryResponse(RouteTotalCalculation.Core.ServiceRoute.getRouteSummaryResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://webservices.maplink2.com.br")]
    public partial class getRouteSummaryResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteSummary> getRouteSummaryResult;
        
        public getRouteSummaryResponseBody() {
        }
        
        public getRouteSummaryResponseBody(System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteSummary> getRouteSummaryResult) {
            this.getRouteSummaryResult = getRouteSummaryResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getRouteDescriptionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getRouteDescription", Namespace="http://webservices.maplink2.com.br", Order=0)]
        public RouteTotalCalculation.Core.ServiceRoute.getRouteDescriptionRequestBody Body;
        
        public getRouteDescriptionRequest() {
        }
        
        public getRouteDescriptionRequest(RouteTotalCalculation.Core.ServiceRoute.getRouteDescriptionRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://webservices.maplink2.com.br")]
    public partial class getRouteDescriptionRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop> rs;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string token;
        
        public getRouteDescriptionRequestBody() {
        }
        
        public getRouteDescriptionRequestBody(System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop> rs, RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro, string token) {
            this.rs = rs;
            this.ro = ro;
            this.token = token;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getRouteDescriptionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getRouteDescriptionResponse", Namespace="http://webservices.maplink2.com.br", Order=0)]
        public RouteTotalCalculation.Core.ServiceRoute.getRouteDescriptionResponseBody Body;
        
        public getRouteDescriptionResponse() {
        }
        
        public getRouteDescriptionResponse(RouteTotalCalculation.Core.ServiceRoute.getRouteDescriptionResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://webservices.maplink2.com.br")]
    public partial class getRouteDescriptionResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.SegmentDescription> getRouteDescriptionResult;
        
        public getRouteDescriptionResponseBody() {
        }
        
        public getRouteDescriptionResponseBody(System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.SegmentDescription> getRouteDescriptionResult) {
            this.getRouteDescriptionResult = getRouteDescriptionResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getRouteWithMapRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getRouteWithMap", Namespace="http://webservices.maplink2.com.br", Order=0)]
        public RouteTotalCalculation.Core.ServiceRoute.getRouteWithMapRequestBody Body;
        
        public getRouteWithMapRequest() {
        }
        
        public getRouteWithMapRequest(RouteTotalCalculation.Core.ServiceRoute.getRouteWithMapRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://webservices.maplink2.com.br")]
    public partial class getRouteWithMapRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop> rs;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public RouteTotalCalculation.Core.ServiceRoute.MapOptions mo;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string token;
        
        public getRouteWithMapRequestBody() {
        }
        
        public getRouteWithMapRequestBody(System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop> rs, RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro, RouteTotalCalculation.Core.ServiceRoute.MapOptions mo, string token) {
            this.rs = rs;
            this.ro = ro;
            this.mo = mo;
            this.token = token;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getRouteWithMapResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getRouteWithMapResponse", Namespace="http://webservices.maplink2.com.br", Order=0)]
        public RouteTotalCalculation.Core.ServiceRoute.getRouteWithMapResponseBody Body;
        
        public getRouteWithMapResponse() {
        }
        
        public getRouteWithMapResponse(RouteTotalCalculation.Core.ServiceRoute.getRouteWithMapResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://webservices.maplink2.com.br")]
    public partial class getRouteWithMapResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public RouteTotalCalculation.Core.ServiceRoute.RouteInfo getRouteWithMapResult;
        
        public getRouteWithMapResponseBody() {
        }
        
        public getRouteWithMapResponseBody(RouteTotalCalculation.Core.ServiceRoute.RouteInfo getRouteWithMapResult) {
            this.getRouteWithMapResult = getRouteWithMapResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface RouteSoapChannel : RouteTotalCalculation.Core.ServiceRoute.RouteSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getRouteTotalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getRouteTotalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public RouteTotalCalculation.Core.ServiceRoute.RouteTotals Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((RouteTotalCalculation.Core.ServiceRoute.RouteTotals)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRouteTotalsBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRouteTotalsBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteTotals> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteTotals>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getRouteWithAlternativesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getRouteWithAlternativesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public RouteTotalCalculation.Core.ServiceRoute.AlternativeRouteInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((RouteTotalCalculation.Core.ServiceRoute.AlternativeRouteInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getMultiRouteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getMultiRouteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public RouteTotalCalculation.Core.ServiceRoute.MultiRoute Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((RouteTotalCalculation.Core.ServiceRoute.MultiRoute)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getRouteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getRouteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public RouteTotalCalculation.Core.ServiceRoute.RouteInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((RouteTotalCalculation.Core.ServiceRoute.RouteInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getRouteSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getRouteSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteSummary> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteSummary>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getRouteDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getRouteDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.SegmentDescription> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.SegmentDescription>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getRouteWithMapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getRouteWithMapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public RouteTotalCalculation.Core.ServiceRoute.RouteInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((RouteTotalCalculation.Core.ServiceRoute.RouteInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RouteSoapClient : System.ServiceModel.ClientBase<RouteTotalCalculation.Core.ServiceRoute.RouteSoap>, RouteTotalCalculation.Core.ServiceRoute.RouteSoap {
        
        private BeginOperationDelegate onBegingetRouteTotalsDelegate;
        
        private EndOperationDelegate onEndgetRouteTotalsDelegate;
        
        private System.Threading.SendOrPostCallback ongetRouteTotalsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRouteTotalsBatchDelegate;
        
        private EndOperationDelegate onEndGetRouteTotalsBatchDelegate;
        
        private System.Threading.SendOrPostCallback onGetRouteTotalsBatchCompletedDelegate;
        
        private BeginOperationDelegate onBegingetRouteWithAlternativesDelegate;
        
        private EndOperationDelegate onEndgetRouteWithAlternativesDelegate;
        
        private System.Threading.SendOrPostCallback ongetRouteWithAlternativesCompletedDelegate;
        
        private BeginOperationDelegate onBegingetMultiRouteDelegate;
        
        private EndOperationDelegate onEndgetMultiRouteDelegate;
        
        private System.Threading.SendOrPostCallback ongetMultiRouteCompletedDelegate;
        
        private BeginOperationDelegate onBegingetRouteDelegate;
        
        private EndOperationDelegate onEndgetRouteDelegate;
        
        private System.Threading.SendOrPostCallback ongetRouteCompletedDelegate;
        
        private BeginOperationDelegate onBegingetRouteSummaryDelegate;
        
        private EndOperationDelegate onEndgetRouteSummaryDelegate;
        
        private System.Threading.SendOrPostCallback ongetRouteSummaryCompletedDelegate;
        
        private BeginOperationDelegate onBegingetRouteDescriptionDelegate;
        
        private EndOperationDelegate onEndgetRouteDescriptionDelegate;
        
        private System.Threading.SendOrPostCallback ongetRouteDescriptionCompletedDelegate;
        
        private BeginOperationDelegate onBegingetRouteWithMapDelegate;
        
        private EndOperationDelegate onEndgetRouteWithMapDelegate;
        
        private System.Threading.SendOrPostCallback ongetRouteWithMapCompletedDelegate;
        
        public RouteSoapClient() {
        }
        
        public RouteSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RouteSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RouteSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RouteSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<getRouteTotalsCompletedEventArgs> getRouteTotalsCompleted;
        
        public event System.EventHandler<GetRouteTotalsBatchCompletedEventArgs> GetRouteTotalsBatchCompleted;
        
        public event System.EventHandler<getRouteWithAlternativesCompletedEventArgs> getRouteWithAlternativesCompleted;
        
        public event System.EventHandler<getMultiRouteCompletedEventArgs> getMultiRouteCompleted;
        
        public event System.EventHandler<getRouteCompletedEventArgs> getRouteCompleted;
        
        public event System.EventHandler<getRouteSummaryCompletedEventArgs> getRouteSummaryCompleted;
        
        public event System.EventHandler<getRouteDescriptionCompletedEventArgs> getRouteDescriptionCompleted;
        
        public event System.EventHandler<getRouteWithMapCompletedEventArgs> getRouteWithMapCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RouteTotalCalculation.Core.ServiceRoute.getRouteTotalsResponse RouteTotalCalculation.Core.ServiceRoute.RouteSoap.getRouteTotals(RouteTotalCalculation.Core.ServiceRoute.getRouteTotalsRequest request) {
            return base.Channel.getRouteTotals(request);
        }
        
        public RouteTotalCalculation.Core.ServiceRoute.RouteTotals getRouteTotals(System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop> rs, RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro, string token) {
            RouteTotalCalculation.Core.ServiceRoute.getRouteTotalsRequest inValue = new RouteTotalCalculation.Core.ServiceRoute.getRouteTotalsRequest();
            inValue.Body = new RouteTotalCalculation.Core.ServiceRoute.getRouteTotalsRequestBody();
            inValue.Body.rs = rs;
            inValue.Body.ro = ro;
            inValue.Body.token = token;
            RouteTotalCalculation.Core.ServiceRoute.getRouteTotalsResponse retVal = ((RouteTotalCalculation.Core.ServiceRoute.RouteSoap)(this)).getRouteTotals(inValue);
            return retVal.Body.getRouteTotalsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult RouteTotalCalculation.Core.ServiceRoute.RouteSoap.BegingetRouteTotals(RouteTotalCalculation.Core.ServiceRoute.getRouteTotalsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetRouteTotals(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetRouteTotals(System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop> rs, RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro, string token, System.AsyncCallback callback, object asyncState) {
            RouteTotalCalculation.Core.ServiceRoute.getRouteTotalsRequest inValue = new RouteTotalCalculation.Core.ServiceRoute.getRouteTotalsRequest();
            inValue.Body = new RouteTotalCalculation.Core.ServiceRoute.getRouteTotalsRequestBody();
            inValue.Body.rs = rs;
            inValue.Body.ro = ro;
            inValue.Body.token = token;
            return ((RouteTotalCalculation.Core.ServiceRoute.RouteSoap)(this)).BegingetRouteTotals(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RouteTotalCalculation.Core.ServiceRoute.getRouteTotalsResponse RouteTotalCalculation.Core.ServiceRoute.RouteSoap.EndgetRouteTotals(System.IAsyncResult result) {
            return base.Channel.EndgetRouteTotals(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public RouteTotalCalculation.Core.ServiceRoute.RouteTotals EndgetRouteTotals(System.IAsyncResult result) {
            RouteTotalCalculation.Core.ServiceRoute.getRouteTotalsResponse retVal = ((RouteTotalCalculation.Core.ServiceRoute.RouteSoap)(this)).EndgetRouteTotals(result);
            return retVal.Body.getRouteTotalsResult;
        }
        
        private System.IAsyncResult OnBegingetRouteTotals(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop> rs = ((System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop>)(inValues[0]));
            RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro = ((RouteTotalCalculation.Core.ServiceRoute.RouteOptions)(inValues[1]));
            string token = ((string)(inValues[2]));
            return this.BegingetRouteTotals(rs, ro, token, callback, asyncState);
        }
        
        private object[] OnEndgetRouteTotals(System.IAsyncResult result) {
            RouteTotalCalculation.Core.ServiceRoute.RouteTotals retVal = this.EndgetRouteTotals(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetRouteTotalsCompleted(object state) {
            if ((this.getRouteTotalsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getRouteTotalsCompleted(this, new getRouteTotalsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getRouteTotalsAsync(System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop> rs, RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro, string token) {
            this.getRouteTotalsAsync(rs, ro, token, null);
        }
        
        public void getRouteTotalsAsync(System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop> rs, RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro, string token, object userState) {
            if ((this.onBegingetRouteTotalsDelegate == null)) {
                this.onBegingetRouteTotalsDelegate = new BeginOperationDelegate(this.OnBegingetRouteTotals);
            }
            if ((this.onEndgetRouteTotalsDelegate == null)) {
                this.onEndgetRouteTotalsDelegate = new EndOperationDelegate(this.OnEndgetRouteTotals);
            }
            if ((this.ongetRouteTotalsCompletedDelegate == null)) {
                this.ongetRouteTotalsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetRouteTotalsCompleted);
            }
            base.InvokeAsync(this.onBegingetRouteTotalsDelegate, new object[] {
                        rs,
                        ro,
                        token}, this.onEndgetRouteTotalsDelegate, this.ongetRouteTotalsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RouteTotalCalculation.Core.ServiceRoute.GetRouteTotalsBatchResponse RouteTotalCalculation.Core.ServiceRoute.RouteSoap.GetRouteTotalsBatch(RouteTotalCalculation.Core.ServiceRoute.GetRouteTotalsBatchRequest request) {
            return base.Channel.GetRouteTotalsBatch(request);
        }
        
        public System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteTotals> GetRouteTotalsBatch(System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteArray> ra, RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro, string token) {
            RouteTotalCalculation.Core.ServiceRoute.GetRouteTotalsBatchRequest inValue = new RouteTotalCalculation.Core.ServiceRoute.GetRouteTotalsBatchRequest();
            inValue.Body = new RouteTotalCalculation.Core.ServiceRoute.GetRouteTotalsBatchRequestBody();
            inValue.Body.ra = ra;
            inValue.Body.ro = ro;
            inValue.Body.token = token;
            RouteTotalCalculation.Core.ServiceRoute.GetRouteTotalsBatchResponse retVal = ((RouteTotalCalculation.Core.ServiceRoute.RouteSoap)(this)).GetRouteTotalsBatch(inValue);
            return retVal.Body.GetRouteTotalsBatchResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult RouteTotalCalculation.Core.ServiceRoute.RouteSoap.BeginGetRouteTotalsBatch(RouteTotalCalculation.Core.ServiceRoute.GetRouteTotalsBatchRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRouteTotalsBatch(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRouteTotalsBatch(System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteArray> ra, RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro, string token, System.AsyncCallback callback, object asyncState) {
            RouteTotalCalculation.Core.ServiceRoute.GetRouteTotalsBatchRequest inValue = new RouteTotalCalculation.Core.ServiceRoute.GetRouteTotalsBatchRequest();
            inValue.Body = new RouteTotalCalculation.Core.ServiceRoute.GetRouteTotalsBatchRequestBody();
            inValue.Body.ra = ra;
            inValue.Body.ro = ro;
            inValue.Body.token = token;
            return ((RouteTotalCalculation.Core.ServiceRoute.RouteSoap)(this)).BeginGetRouteTotalsBatch(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RouteTotalCalculation.Core.ServiceRoute.GetRouteTotalsBatchResponse RouteTotalCalculation.Core.ServiceRoute.RouteSoap.EndGetRouteTotalsBatch(System.IAsyncResult result) {
            return base.Channel.EndGetRouteTotalsBatch(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteTotals> EndGetRouteTotalsBatch(System.IAsyncResult result) {
            RouteTotalCalculation.Core.ServiceRoute.GetRouteTotalsBatchResponse retVal = ((RouteTotalCalculation.Core.ServiceRoute.RouteSoap)(this)).EndGetRouteTotalsBatch(result);
            return retVal.Body.GetRouteTotalsBatchResult;
        }
        
        private System.IAsyncResult OnBeginGetRouteTotalsBatch(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteArray> ra = ((System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteArray>)(inValues[0]));
            RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro = ((RouteTotalCalculation.Core.ServiceRoute.RouteOptions)(inValues[1]));
            string token = ((string)(inValues[2]));
            return this.BeginGetRouteTotalsBatch(ra, ro, token, callback, asyncState);
        }
        
        private object[] OnEndGetRouteTotalsBatch(System.IAsyncResult result) {
            System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteTotals> retVal = this.EndGetRouteTotalsBatch(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRouteTotalsBatchCompleted(object state) {
            if ((this.GetRouteTotalsBatchCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRouteTotalsBatchCompleted(this, new GetRouteTotalsBatchCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRouteTotalsBatchAsync(System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteArray> ra, RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro, string token) {
            this.GetRouteTotalsBatchAsync(ra, ro, token, null);
        }
        
        public void GetRouteTotalsBatchAsync(System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteArray> ra, RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro, string token, object userState) {
            if ((this.onBeginGetRouteTotalsBatchDelegate == null)) {
                this.onBeginGetRouteTotalsBatchDelegate = new BeginOperationDelegate(this.OnBeginGetRouteTotalsBatch);
            }
            if ((this.onEndGetRouteTotalsBatchDelegate == null)) {
                this.onEndGetRouteTotalsBatchDelegate = new EndOperationDelegate(this.OnEndGetRouteTotalsBatch);
            }
            if ((this.onGetRouteTotalsBatchCompletedDelegate == null)) {
                this.onGetRouteTotalsBatchCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRouteTotalsBatchCompleted);
            }
            base.InvokeAsync(this.onBeginGetRouteTotalsBatchDelegate, new object[] {
                        ra,
                        ro,
                        token}, this.onEndGetRouteTotalsBatchDelegate, this.onGetRouteTotalsBatchCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RouteTotalCalculation.Core.ServiceRoute.getRouteWithAlternativesResponse RouteTotalCalculation.Core.ServiceRoute.RouteSoap.getRouteWithAlternatives(RouteTotalCalculation.Core.ServiceRoute.getRouteWithAlternativesRequest request) {
            return base.Channel.getRouteWithAlternatives(request);
        }
        
        public RouteTotalCalculation.Core.ServiceRoute.AlternativeRouteInfo getRouteWithAlternatives(System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop> rs, RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro, string token) {
            RouteTotalCalculation.Core.ServiceRoute.getRouteWithAlternativesRequest inValue = new RouteTotalCalculation.Core.ServiceRoute.getRouteWithAlternativesRequest();
            inValue.Body = new RouteTotalCalculation.Core.ServiceRoute.getRouteWithAlternativesRequestBody();
            inValue.Body.rs = rs;
            inValue.Body.ro = ro;
            inValue.Body.token = token;
            RouteTotalCalculation.Core.ServiceRoute.getRouteWithAlternativesResponse retVal = ((RouteTotalCalculation.Core.ServiceRoute.RouteSoap)(this)).getRouteWithAlternatives(inValue);
            return retVal.Body.getRouteWithAlternativesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult RouteTotalCalculation.Core.ServiceRoute.RouteSoap.BegingetRouteWithAlternatives(RouteTotalCalculation.Core.ServiceRoute.getRouteWithAlternativesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetRouteWithAlternatives(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetRouteWithAlternatives(System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop> rs, RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro, string token, System.AsyncCallback callback, object asyncState) {
            RouteTotalCalculation.Core.ServiceRoute.getRouteWithAlternativesRequest inValue = new RouteTotalCalculation.Core.ServiceRoute.getRouteWithAlternativesRequest();
            inValue.Body = new RouteTotalCalculation.Core.ServiceRoute.getRouteWithAlternativesRequestBody();
            inValue.Body.rs = rs;
            inValue.Body.ro = ro;
            inValue.Body.token = token;
            return ((RouteTotalCalculation.Core.ServiceRoute.RouteSoap)(this)).BegingetRouteWithAlternatives(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RouteTotalCalculation.Core.ServiceRoute.getRouteWithAlternativesResponse RouteTotalCalculation.Core.ServiceRoute.RouteSoap.EndgetRouteWithAlternatives(System.IAsyncResult result) {
            return base.Channel.EndgetRouteWithAlternatives(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public RouteTotalCalculation.Core.ServiceRoute.AlternativeRouteInfo EndgetRouteWithAlternatives(System.IAsyncResult result) {
            RouteTotalCalculation.Core.ServiceRoute.getRouteWithAlternativesResponse retVal = ((RouteTotalCalculation.Core.ServiceRoute.RouteSoap)(this)).EndgetRouteWithAlternatives(result);
            return retVal.Body.getRouteWithAlternativesResult;
        }
        
        private System.IAsyncResult OnBegingetRouteWithAlternatives(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop> rs = ((System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop>)(inValues[0]));
            RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro = ((RouteTotalCalculation.Core.ServiceRoute.RouteOptions)(inValues[1]));
            string token = ((string)(inValues[2]));
            return this.BegingetRouteWithAlternatives(rs, ro, token, callback, asyncState);
        }
        
        private object[] OnEndgetRouteWithAlternatives(System.IAsyncResult result) {
            RouteTotalCalculation.Core.ServiceRoute.AlternativeRouteInfo retVal = this.EndgetRouteWithAlternatives(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetRouteWithAlternativesCompleted(object state) {
            if ((this.getRouteWithAlternativesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getRouteWithAlternativesCompleted(this, new getRouteWithAlternativesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getRouteWithAlternativesAsync(System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop> rs, RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro, string token) {
            this.getRouteWithAlternativesAsync(rs, ro, token, null);
        }
        
        public void getRouteWithAlternativesAsync(System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop> rs, RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro, string token, object userState) {
            if ((this.onBegingetRouteWithAlternativesDelegate == null)) {
                this.onBegingetRouteWithAlternativesDelegate = new BeginOperationDelegate(this.OnBegingetRouteWithAlternatives);
            }
            if ((this.onEndgetRouteWithAlternativesDelegate == null)) {
                this.onEndgetRouteWithAlternativesDelegate = new EndOperationDelegate(this.OnEndgetRouteWithAlternatives);
            }
            if ((this.ongetRouteWithAlternativesCompletedDelegate == null)) {
                this.ongetRouteWithAlternativesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetRouteWithAlternativesCompleted);
            }
            base.InvokeAsync(this.onBegingetRouteWithAlternativesDelegate, new object[] {
                        rs,
                        ro,
                        token}, this.onEndgetRouteWithAlternativesDelegate, this.ongetRouteWithAlternativesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RouteTotalCalculation.Core.ServiceRoute.getMultiRouteResponse RouteTotalCalculation.Core.ServiceRoute.RouteSoap.getMultiRoute(RouteTotalCalculation.Core.ServiceRoute.getMultiRouteRequest request) {
            return base.Channel.getMultiRoute(request);
        }
        
        public RouteTotalCalculation.Core.ServiceRoute.MultiRoute getMultiRoute(System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.MultiRouteRequest> request, RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro, string token) {
            RouteTotalCalculation.Core.ServiceRoute.getMultiRouteRequest inValue = new RouteTotalCalculation.Core.ServiceRoute.getMultiRouteRequest();
            inValue.Body = new RouteTotalCalculation.Core.ServiceRoute.getMultiRouteRequestBody();
            inValue.Body.request = request;
            inValue.Body.ro = ro;
            inValue.Body.token = token;
            RouteTotalCalculation.Core.ServiceRoute.getMultiRouteResponse retVal = ((RouteTotalCalculation.Core.ServiceRoute.RouteSoap)(this)).getMultiRoute(inValue);
            return retVal.Body.getMultiRouteResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult RouteTotalCalculation.Core.ServiceRoute.RouteSoap.BegingetMultiRoute(RouteTotalCalculation.Core.ServiceRoute.getMultiRouteRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetMultiRoute(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetMultiRoute(System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.MultiRouteRequest> request, RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro, string token, System.AsyncCallback callback, object asyncState) {
            RouteTotalCalculation.Core.ServiceRoute.getMultiRouteRequest inValue = new RouteTotalCalculation.Core.ServiceRoute.getMultiRouteRequest();
            inValue.Body = new RouteTotalCalculation.Core.ServiceRoute.getMultiRouteRequestBody();
            inValue.Body.request = request;
            inValue.Body.ro = ro;
            inValue.Body.token = token;
            return ((RouteTotalCalculation.Core.ServiceRoute.RouteSoap)(this)).BegingetMultiRoute(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RouteTotalCalculation.Core.ServiceRoute.getMultiRouteResponse RouteTotalCalculation.Core.ServiceRoute.RouteSoap.EndgetMultiRoute(System.IAsyncResult result) {
            return base.Channel.EndgetMultiRoute(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public RouteTotalCalculation.Core.ServiceRoute.MultiRoute EndgetMultiRoute(System.IAsyncResult result) {
            RouteTotalCalculation.Core.ServiceRoute.getMultiRouteResponse retVal = ((RouteTotalCalculation.Core.ServiceRoute.RouteSoap)(this)).EndgetMultiRoute(result);
            return retVal.Body.getMultiRouteResult;
        }
        
        private System.IAsyncResult OnBegingetMultiRoute(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.MultiRouteRequest> request = ((System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.MultiRouteRequest>)(inValues[0]));
            RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro = ((RouteTotalCalculation.Core.ServiceRoute.RouteOptions)(inValues[1]));
            string token = ((string)(inValues[2]));
            return this.BegingetMultiRoute(request, ro, token, callback, asyncState);
        }
        
        private object[] OnEndgetMultiRoute(System.IAsyncResult result) {
            RouteTotalCalculation.Core.ServiceRoute.MultiRoute retVal = this.EndgetMultiRoute(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetMultiRouteCompleted(object state) {
            if ((this.getMultiRouteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getMultiRouteCompleted(this, new getMultiRouteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getMultiRouteAsync(System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.MultiRouteRequest> request, RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro, string token) {
            this.getMultiRouteAsync(request, ro, token, null);
        }
        
        public void getMultiRouteAsync(System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.MultiRouteRequest> request, RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro, string token, object userState) {
            if ((this.onBegingetMultiRouteDelegate == null)) {
                this.onBegingetMultiRouteDelegate = new BeginOperationDelegate(this.OnBegingetMultiRoute);
            }
            if ((this.onEndgetMultiRouteDelegate == null)) {
                this.onEndgetMultiRouteDelegate = new EndOperationDelegate(this.OnEndgetMultiRoute);
            }
            if ((this.ongetMultiRouteCompletedDelegate == null)) {
                this.ongetMultiRouteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetMultiRouteCompleted);
            }
            base.InvokeAsync(this.onBegingetMultiRouteDelegate, new object[] {
                        request,
                        ro,
                        token}, this.onEndgetMultiRouteDelegate, this.ongetMultiRouteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RouteTotalCalculation.Core.ServiceRoute.getRouteResponse RouteTotalCalculation.Core.ServiceRoute.RouteSoap.getRoute(RouteTotalCalculation.Core.ServiceRoute.getRouteRequest request) {
            return base.Channel.getRoute(request);
        }
        
        public RouteTotalCalculation.Core.ServiceRoute.RouteInfo getRoute(System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop> rs, RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro, string token) {
            RouteTotalCalculation.Core.ServiceRoute.getRouteRequest inValue = new RouteTotalCalculation.Core.ServiceRoute.getRouteRequest();
            inValue.Body = new RouteTotalCalculation.Core.ServiceRoute.getRouteRequestBody();
            inValue.Body.rs = rs;
            inValue.Body.ro = ro;
            inValue.Body.token = token;
            RouteTotalCalculation.Core.ServiceRoute.getRouteResponse retVal = ((RouteTotalCalculation.Core.ServiceRoute.RouteSoap)(this)).getRoute(inValue);
            return retVal.Body.getRouteResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult RouteTotalCalculation.Core.ServiceRoute.RouteSoap.BegingetRoute(RouteTotalCalculation.Core.ServiceRoute.getRouteRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetRoute(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetRoute(System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop> rs, RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro, string token, System.AsyncCallback callback, object asyncState) {
            RouteTotalCalculation.Core.ServiceRoute.getRouteRequest inValue = new RouteTotalCalculation.Core.ServiceRoute.getRouteRequest();
            inValue.Body = new RouteTotalCalculation.Core.ServiceRoute.getRouteRequestBody();
            inValue.Body.rs = rs;
            inValue.Body.ro = ro;
            inValue.Body.token = token;
            return ((RouteTotalCalculation.Core.ServiceRoute.RouteSoap)(this)).BegingetRoute(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RouteTotalCalculation.Core.ServiceRoute.getRouteResponse RouteTotalCalculation.Core.ServiceRoute.RouteSoap.EndgetRoute(System.IAsyncResult result) {
            return base.Channel.EndgetRoute(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public RouteTotalCalculation.Core.ServiceRoute.RouteInfo EndgetRoute(System.IAsyncResult result) {
            RouteTotalCalculation.Core.ServiceRoute.getRouteResponse retVal = ((RouteTotalCalculation.Core.ServiceRoute.RouteSoap)(this)).EndgetRoute(result);
            return retVal.Body.getRouteResult;
        }
        
        private System.IAsyncResult OnBegingetRoute(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop> rs = ((System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop>)(inValues[0]));
            RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro = ((RouteTotalCalculation.Core.ServiceRoute.RouteOptions)(inValues[1]));
            string token = ((string)(inValues[2]));
            return this.BegingetRoute(rs, ro, token, callback, asyncState);
        }
        
        private object[] OnEndgetRoute(System.IAsyncResult result) {
            RouteTotalCalculation.Core.ServiceRoute.RouteInfo retVal = this.EndgetRoute(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetRouteCompleted(object state) {
            if ((this.getRouteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getRouteCompleted(this, new getRouteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getRouteAsync(System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop> rs, RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro, string token) {
            this.getRouteAsync(rs, ro, token, null);
        }
        
        public void getRouteAsync(System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop> rs, RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro, string token, object userState) {
            if ((this.onBegingetRouteDelegate == null)) {
                this.onBegingetRouteDelegate = new BeginOperationDelegate(this.OnBegingetRoute);
            }
            if ((this.onEndgetRouteDelegate == null)) {
                this.onEndgetRouteDelegate = new EndOperationDelegate(this.OnEndgetRoute);
            }
            if ((this.ongetRouteCompletedDelegate == null)) {
                this.ongetRouteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetRouteCompleted);
            }
            base.InvokeAsync(this.onBegingetRouteDelegate, new object[] {
                        rs,
                        ro,
                        token}, this.onEndgetRouteDelegate, this.ongetRouteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RouteTotalCalculation.Core.ServiceRoute.getRouteSummaryResponse RouteTotalCalculation.Core.ServiceRoute.RouteSoap.getRouteSummary(RouteTotalCalculation.Core.ServiceRoute.getRouteSummaryRequest request) {
            return base.Channel.getRouteSummary(request);
        }
        
        public System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteSummary> getRouteSummary(System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop> rs, RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro, string token) {
            RouteTotalCalculation.Core.ServiceRoute.getRouteSummaryRequest inValue = new RouteTotalCalculation.Core.ServiceRoute.getRouteSummaryRequest();
            inValue.Body = new RouteTotalCalculation.Core.ServiceRoute.getRouteSummaryRequestBody();
            inValue.Body.rs = rs;
            inValue.Body.ro = ro;
            inValue.Body.token = token;
            RouteTotalCalculation.Core.ServiceRoute.getRouteSummaryResponse retVal = ((RouteTotalCalculation.Core.ServiceRoute.RouteSoap)(this)).getRouteSummary(inValue);
            return retVal.Body.getRouteSummaryResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult RouteTotalCalculation.Core.ServiceRoute.RouteSoap.BegingetRouteSummary(RouteTotalCalculation.Core.ServiceRoute.getRouteSummaryRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetRouteSummary(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetRouteSummary(System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop> rs, RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro, string token, System.AsyncCallback callback, object asyncState) {
            RouteTotalCalculation.Core.ServiceRoute.getRouteSummaryRequest inValue = new RouteTotalCalculation.Core.ServiceRoute.getRouteSummaryRequest();
            inValue.Body = new RouteTotalCalculation.Core.ServiceRoute.getRouteSummaryRequestBody();
            inValue.Body.rs = rs;
            inValue.Body.ro = ro;
            inValue.Body.token = token;
            return ((RouteTotalCalculation.Core.ServiceRoute.RouteSoap)(this)).BegingetRouteSummary(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RouteTotalCalculation.Core.ServiceRoute.getRouteSummaryResponse RouteTotalCalculation.Core.ServiceRoute.RouteSoap.EndgetRouteSummary(System.IAsyncResult result) {
            return base.Channel.EndgetRouteSummary(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteSummary> EndgetRouteSummary(System.IAsyncResult result) {
            RouteTotalCalculation.Core.ServiceRoute.getRouteSummaryResponse retVal = ((RouteTotalCalculation.Core.ServiceRoute.RouteSoap)(this)).EndgetRouteSummary(result);
            return retVal.Body.getRouteSummaryResult;
        }
        
        private System.IAsyncResult OnBegingetRouteSummary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop> rs = ((System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop>)(inValues[0]));
            RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro = ((RouteTotalCalculation.Core.ServiceRoute.RouteOptions)(inValues[1]));
            string token = ((string)(inValues[2]));
            return this.BegingetRouteSummary(rs, ro, token, callback, asyncState);
        }
        
        private object[] OnEndgetRouteSummary(System.IAsyncResult result) {
            System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteSummary> retVal = this.EndgetRouteSummary(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetRouteSummaryCompleted(object state) {
            if ((this.getRouteSummaryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getRouteSummaryCompleted(this, new getRouteSummaryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getRouteSummaryAsync(System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop> rs, RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro, string token) {
            this.getRouteSummaryAsync(rs, ro, token, null);
        }
        
        public void getRouteSummaryAsync(System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop> rs, RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro, string token, object userState) {
            if ((this.onBegingetRouteSummaryDelegate == null)) {
                this.onBegingetRouteSummaryDelegate = new BeginOperationDelegate(this.OnBegingetRouteSummary);
            }
            if ((this.onEndgetRouteSummaryDelegate == null)) {
                this.onEndgetRouteSummaryDelegate = new EndOperationDelegate(this.OnEndgetRouteSummary);
            }
            if ((this.ongetRouteSummaryCompletedDelegate == null)) {
                this.ongetRouteSummaryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetRouteSummaryCompleted);
            }
            base.InvokeAsync(this.onBegingetRouteSummaryDelegate, new object[] {
                        rs,
                        ro,
                        token}, this.onEndgetRouteSummaryDelegate, this.ongetRouteSummaryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RouteTotalCalculation.Core.ServiceRoute.getRouteDescriptionResponse RouteTotalCalculation.Core.ServiceRoute.RouteSoap.getRouteDescription(RouteTotalCalculation.Core.ServiceRoute.getRouteDescriptionRequest request) {
            return base.Channel.getRouteDescription(request);
        }
        
        public System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.SegmentDescription> getRouteDescription(System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop> rs, RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro, string token) {
            RouteTotalCalculation.Core.ServiceRoute.getRouteDescriptionRequest inValue = new RouteTotalCalculation.Core.ServiceRoute.getRouteDescriptionRequest();
            inValue.Body = new RouteTotalCalculation.Core.ServiceRoute.getRouteDescriptionRequestBody();
            inValue.Body.rs = rs;
            inValue.Body.ro = ro;
            inValue.Body.token = token;
            RouteTotalCalculation.Core.ServiceRoute.getRouteDescriptionResponse retVal = ((RouteTotalCalculation.Core.ServiceRoute.RouteSoap)(this)).getRouteDescription(inValue);
            return retVal.Body.getRouteDescriptionResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult RouteTotalCalculation.Core.ServiceRoute.RouteSoap.BegingetRouteDescription(RouteTotalCalculation.Core.ServiceRoute.getRouteDescriptionRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetRouteDescription(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetRouteDescription(System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop> rs, RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro, string token, System.AsyncCallback callback, object asyncState) {
            RouteTotalCalculation.Core.ServiceRoute.getRouteDescriptionRequest inValue = new RouteTotalCalculation.Core.ServiceRoute.getRouteDescriptionRequest();
            inValue.Body = new RouteTotalCalculation.Core.ServiceRoute.getRouteDescriptionRequestBody();
            inValue.Body.rs = rs;
            inValue.Body.ro = ro;
            inValue.Body.token = token;
            return ((RouteTotalCalculation.Core.ServiceRoute.RouteSoap)(this)).BegingetRouteDescription(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RouteTotalCalculation.Core.ServiceRoute.getRouteDescriptionResponse RouteTotalCalculation.Core.ServiceRoute.RouteSoap.EndgetRouteDescription(System.IAsyncResult result) {
            return base.Channel.EndgetRouteDescription(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.SegmentDescription> EndgetRouteDescription(System.IAsyncResult result) {
            RouteTotalCalculation.Core.ServiceRoute.getRouteDescriptionResponse retVal = ((RouteTotalCalculation.Core.ServiceRoute.RouteSoap)(this)).EndgetRouteDescription(result);
            return retVal.Body.getRouteDescriptionResult;
        }
        
        private System.IAsyncResult OnBegingetRouteDescription(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop> rs = ((System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop>)(inValues[0]));
            RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro = ((RouteTotalCalculation.Core.ServiceRoute.RouteOptions)(inValues[1]));
            string token = ((string)(inValues[2]));
            return this.BegingetRouteDescription(rs, ro, token, callback, asyncState);
        }
        
        private object[] OnEndgetRouteDescription(System.IAsyncResult result) {
            System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.SegmentDescription> retVal = this.EndgetRouteDescription(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetRouteDescriptionCompleted(object state) {
            if ((this.getRouteDescriptionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getRouteDescriptionCompleted(this, new getRouteDescriptionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getRouteDescriptionAsync(System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop> rs, RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro, string token) {
            this.getRouteDescriptionAsync(rs, ro, token, null);
        }
        
        public void getRouteDescriptionAsync(System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop> rs, RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro, string token, object userState) {
            if ((this.onBegingetRouteDescriptionDelegate == null)) {
                this.onBegingetRouteDescriptionDelegate = new BeginOperationDelegate(this.OnBegingetRouteDescription);
            }
            if ((this.onEndgetRouteDescriptionDelegate == null)) {
                this.onEndgetRouteDescriptionDelegate = new EndOperationDelegate(this.OnEndgetRouteDescription);
            }
            if ((this.ongetRouteDescriptionCompletedDelegate == null)) {
                this.ongetRouteDescriptionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetRouteDescriptionCompleted);
            }
            base.InvokeAsync(this.onBegingetRouteDescriptionDelegate, new object[] {
                        rs,
                        ro,
                        token}, this.onEndgetRouteDescriptionDelegate, this.ongetRouteDescriptionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RouteTotalCalculation.Core.ServiceRoute.getRouteWithMapResponse RouteTotalCalculation.Core.ServiceRoute.RouteSoap.getRouteWithMap(RouteTotalCalculation.Core.ServiceRoute.getRouteWithMapRequest request) {
            return base.Channel.getRouteWithMap(request);
        }
        
        public RouteTotalCalculation.Core.ServiceRoute.RouteInfo getRouteWithMap(System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop> rs, RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro, RouteTotalCalculation.Core.ServiceRoute.MapOptions mo, string token) {
            RouteTotalCalculation.Core.ServiceRoute.getRouteWithMapRequest inValue = new RouteTotalCalculation.Core.ServiceRoute.getRouteWithMapRequest();
            inValue.Body = new RouteTotalCalculation.Core.ServiceRoute.getRouteWithMapRequestBody();
            inValue.Body.rs = rs;
            inValue.Body.ro = ro;
            inValue.Body.mo = mo;
            inValue.Body.token = token;
            RouteTotalCalculation.Core.ServiceRoute.getRouteWithMapResponse retVal = ((RouteTotalCalculation.Core.ServiceRoute.RouteSoap)(this)).getRouteWithMap(inValue);
            return retVal.Body.getRouteWithMapResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult RouteTotalCalculation.Core.ServiceRoute.RouteSoap.BegingetRouteWithMap(RouteTotalCalculation.Core.ServiceRoute.getRouteWithMapRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetRouteWithMap(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetRouteWithMap(System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop> rs, RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro, RouteTotalCalculation.Core.ServiceRoute.MapOptions mo, string token, System.AsyncCallback callback, object asyncState) {
            RouteTotalCalculation.Core.ServiceRoute.getRouteWithMapRequest inValue = new RouteTotalCalculation.Core.ServiceRoute.getRouteWithMapRequest();
            inValue.Body = new RouteTotalCalculation.Core.ServiceRoute.getRouteWithMapRequestBody();
            inValue.Body.rs = rs;
            inValue.Body.ro = ro;
            inValue.Body.mo = mo;
            inValue.Body.token = token;
            return ((RouteTotalCalculation.Core.ServiceRoute.RouteSoap)(this)).BegingetRouteWithMap(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RouteTotalCalculation.Core.ServiceRoute.getRouteWithMapResponse RouteTotalCalculation.Core.ServiceRoute.RouteSoap.EndgetRouteWithMap(System.IAsyncResult result) {
            return base.Channel.EndgetRouteWithMap(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public RouteTotalCalculation.Core.ServiceRoute.RouteInfo EndgetRouteWithMap(System.IAsyncResult result) {
            RouteTotalCalculation.Core.ServiceRoute.getRouteWithMapResponse retVal = ((RouteTotalCalculation.Core.ServiceRoute.RouteSoap)(this)).EndgetRouteWithMap(result);
            return retVal.Body.getRouteWithMapResult;
        }
        
        private System.IAsyncResult OnBegingetRouteWithMap(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop> rs = ((System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop>)(inValues[0]));
            RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro = ((RouteTotalCalculation.Core.ServiceRoute.RouteOptions)(inValues[1]));
            RouteTotalCalculation.Core.ServiceRoute.MapOptions mo = ((RouteTotalCalculation.Core.ServiceRoute.MapOptions)(inValues[2]));
            string token = ((string)(inValues[3]));
            return this.BegingetRouteWithMap(rs, ro, mo, token, callback, asyncState);
        }
        
        private object[] OnEndgetRouteWithMap(System.IAsyncResult result) {
            RouteTotalCalculation.Core.ServiceRoute.RouteInfo retVal = this.EndgetRouteWithMap(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetRouteWithMapCompleted(object state) {
            if ((this.getRouteWithMapCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getRouteWithMapCompleted(this, new getRouteWithMapCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getRouteWithMapAsync(System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop> rs, RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro, RouteTotalCalculation.Core.ServiceRoute.MapOptions mo, string token) {
            this.getRouteWithMapAsync(rs, ro, mo, token, null);
        }
        
        public void getRouteWithMapAsync(System.Collections.Generic.List<RouteTotalCalculation.Core.ServiceRoute.RouteStop> rs, RouteTotalCalculation.Core.ServiceRoute.RouteOptions ro, RouteTotalCalculation.Core.ServiceRoute.MapOptions mo, string token, object userState) {
            if ((this.onBegingetRouteWithMapDelegate == null)) {
                this.onBegingetRouteWithMapDelegate = new BeginOperationDelegate(this.OnBegingetRouteWithMap);
            }
            if ((this.onEndgetRouteWithMapDelegate == null)) {
                this.onEndgetRouteWithMapDelegate = new EndOperationDelegate(this.OnEndgetRouteWithMap);
            }
            if ((this.ongetRouteWithMapCompletedDelegate == null)) {
                this.ongetRouteWithMapCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetRouteWithMapCompleted);
            }
            base.InvokeAsync(this.onBegingetRouteWithMapDelegate, new object[] {
                        rs,
                        ro,
                        mo,
                        token}, this.onEndgetRouteWithMapDelegate, this.ongetRouteWithMapCompletedDelegate, userState);
        }
    }
}
